// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CALIBRATION_RANGE_INFO_VGPB.proto

package com.aolais.electroraven.is2viewerbeta.protos;

public final class CalibrationRangeInfoVGPB {
  private CalibrationRangeInfoVGPB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CALIBRATION_RANGE_INFO_VGPBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CALIBRATION_RANGE_INFO_VGPB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 calRangeIndex = 1;</code>
     */
    boolean hasCalRangeIndex();
    /**
     * <code>required int32 calRangeIndex = 1;</code>
     */
    int getCalRangeIndex();

    /**
     * <code>required int32 maxCalRangeIndex = 2;</code>
     */
    boolean hasMaxCalRangeIndex();
    /**
     * <code>required int32 maxCalRangeIndex = 2;</code>
     */
    int getMaxCalRangeIndex();

    /**
     * <code>required float calRangeMinTempC = 3;</code>
     */
    boolean hasCalRangeMinTempC();
    /**
     * <code>required float calRangeMinTempC = 3;</code>
     */
    float getCalRangeMinTempC();

    /**
     * <code>required float calRangeMaxTempC = 4;</code>
     */
    boolean hasCalRangeMaxTempC();
    /**
     * <code>required float calRangeMaxTempC = 4;</code>
     */
    float getCalRangeMaxTempC();

    /**
     * <code>required float minDisplayableTempC = 5;</code>
     */
    boolean hasMinDisplayableTempC();
    /**
     * <code>required float minDisplayableTempC = 5;</code>
     */
    float getMinDisplayableTempC();

    /**
     * <code>required float maxDisplayableTempC = 6;</code>
     */
    boolean hasMaxDisplayableTempC();
    /**
     * <code>required float maxDisplayableTempC = 6;</code>
     */
    float getMaxDisplayableTempC();

    /**
     * <code>required float minManualPaletteSpanDegreesC = 7;</code>
     */
    boolean hasMinManualPaletteSpanDegreesC();
    /**
     * <code>required float minManualPaletteSpanDegreesC = 7;</code>
     */
    float getMinManualPaletteSpanDegreesC();

    /**
     * <code>required float minAutoPaletteSpanDegreesC = 8;</code>
     */
    boolean hasMinAutoPaletteSpanDegreesC();
    /**
     * <code>required float minAutoPaletteSpanDegreesC = 8;</code>
     */
    float getMinAutoPaletteSpanDegreesC();

    /**
     * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
     */
    java.util.List<com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB> 
        getGeminiUInverseCurvesList();
    /**
     * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
     */
    com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB getGeminiUInverseCurves(int index);
    /**
     * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
     */
    int getGeminiUInverseCurvesCount();
    /**
     * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
     */
    java.util.List<? extends com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPBOrBuilder> 
        getGeminiUInverseCurvesOrBuilderList();
    /**
     * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
     */
    com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPBOrBuilder getGeminiUInverseCurvesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CALIBRATION_RANGE_INFO_VGPB}
   */
  public static final class CALIBRATION_RANGE_INFO_VGPB extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CALIBRATION_RANGE_INFO_VGPB)
      CALIBRATION_RANGE_INFO_VGPBOrBuilder {
    // Use CALIBRATION_RANGE_INFO_VGPB.newBuilder() to construct.
    private CALIBRATION_RANGE_INFO_VGPB(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CALIBRATION_RANGE_INFO_VGPB(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CALIBRATION_RANGE_INFO_VGPB defaultInstance;
    public static CALIBRATION_RANGE_INFO_VGPB getDefaultInstance() {
      return defaultInstance;
    }

    public CALIBRATION_RANGE_INFO_VGPB getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CALIBRATION_RANGE_INFO_VGPB(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              calRangeIndex_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              maxCalRangeIndex_ = input.readInt32();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              calRangeMinTempC_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              calRangeMaxTempC_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              minDisplayableTempC_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              maxDisplayableTempC_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              minManualPaletteSpanDegreesC_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              minAutoPaletteSpanDegreesC_ = input.readFloat();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                geminiUInverseCurves_ = new java.util.ArrayList<com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB>();
                mutable_bitField0_ |= 0x00000100;
              }
              geminiUInverseCurves_.add(input.readMessage(com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          geminiUInverseCurves_ = java.util.Collections.unmodifiableList(geminiUInverseCurves_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.internal_static_CALIBRATION_RANGE_INFO_VGPB_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.internal_static_CALIBRATION_RANGE_INFO_VGPB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB.class, com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB.Builder.class);
    }

    public static com.google.protobuf.Parser<CALIBRATION_RANGE_INFO_VGPB> PARSER =
        new com.google.protobuf.AbstractParser<CALIBRATION_RANGE_INFO_VGPB>() {
      public CALIBRATION_RANGE_INFO_VGPB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CALIBRATION_RANGE_INFO_VGPB(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CALIBRATION_RANGE_INFO_VGPB> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CALRANGEINDEX_FIELD_NUMBER = 1;
    private int calRangeIndex_;
    /**
     * <code>required int32 calRangeIndex = 1;</code>
     */
    public boolean hasCalRangeIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 calRangeIndex = 1;</code>
     */
    public int getCalRangeIndex() {
      return calRangeIndex_;
    }

    public static final int MAXCALRANGEINDEX_FIELD_NUMBER = 2;
    private int maxCalRangeIndex_;
    /**
     * <code>required int32 maxCalRangeIndex = 2;</code>
     */
    public boolean hasMaxCalRangeIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 maxCalRangeIndex = 2;</code>
     */
    public int getMaxCalRangeIndex() {
      return maxCalRangeIndex_;
    }

    public static final int CALRANGEMINTEMPC_FIELD_NUMBER = 3;
    private float calRangeMinTempC_;
    /**
     * <code>required float calRangeMinTempC = 3;</code>
     */
    public boolean hasCalRangeMinTempC() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float calRangeMinTempC = 3;</code>
     */
    public float getCalRangeMinTempC() {
      return calRangeMinTempC_;
    }

    public static final int CALRANGEMAXTEMPC_FIELD_NUMBER = 4;
    private float calRangeMaxTempC_;
    /**
     * <code>required float calRangeMaxTempC = 4;</code>
     */
    public boolean hasCalRangeMaxTempC() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required float calRangeMaxTempC = 4;</code>
     */
    public float getCalRangeMaxTempC() {
      return calRangeMaxTempC_;
    }

    public static final int MINDISPLAYABLETEMPC_FIELD_NUMBER = 5;
    private float minDisplayableTempC_;
    /**
     * <code>required float minDisplayableTempC = 5;</code>
     */
    public boolean hasMinDisplayableTempC() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required float minDisplayableTempC = 5;</code>
     */
    public float getMinDisplayableTempC() {
      return minDisplayableTempC_;
    }

    public static final int MAXDISPLAYABLETEMPC_FIELD_NUMBER = 6;
    private float maxDisplayableTempC_;
    /**
     * <code>required float maxDisplayableTempC = 6;</code>
     */
    public boolean hasMaxDisplayableTempC() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required float maxDisplayableTempC = 6;</code>
     */
    public float getMaxDisplayableTempC() {
      return maxDisplayableTempC_;
    }

    public static final int MINMANUALPALETTESPANDEGREESC_FIELD_NUMBER = 7;
    private float minManualPaletteSpanDegreesC_;
    /**
     * <code>required float minManualPaletteSpanDegreesC = 7;</code>
     */
    public boolean hasMinManualPaletteSpanDegreesC() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required float minManualPaletteSpanDegreesC = 7;</code>
     */
    public float getMinManualPaletteSpanDegreesC() {
      return minManualPaletteSpanDegreesC_;
    }

    public static final int MINAUTOPALETTESPANDEGREESC_FIELD_NUMBER = 8;
    private float minAutoPaletteSpanDegreesC_;
    /**
     * <code>required float minAutoPaletteSpanDegreesC = 8;</code>
     */
    public boolean hasMinAutoPaletteSpanDegreesC() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required float minAutoPaletteSpanDegreesC = 8;</code>
     */
    public float getMinAutoPaletteSpanDegreesC() {
      return minAutoPaletteSpanDegreesC_;
    }

    public static final int GEMINIUINVERSECURVES_FIELD_NUMBER = 9;
    private java.util.List<com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB> geminiUInverseCurves_;
    /**
     * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
     */
    public java.util.List<com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB> getGeminiUInverseCurvesList() {
      return geminiUInverseCurves_;
    }
    /**
     * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
     */
    public java.util.List<? extends com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPBOrBuilder> 
        getGeminiUInverseCurvesOrBuilderList() {
      return geminiUInverseCurves_;
    }
    /**
     * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
     */
    public int getGeminiUInverseCurvesCount() {
      return geminiUInverseCurves_.size();
    }
    /**
     * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
     */
    public com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB getGeminiUInverseCurves(int index) {
      return geminiUInverseCurves_.get(index);
    }
    /**
     * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
     */
    public com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPBOrBuilder getGeminiUInverseCurvesOrBuilder(
        int index) {
      return geminiUInverseCurves_.get(index);
    }

    private void initFields() {
      calRangeIndex_ = 0;
      maxCalRangeIndex_ = 0;
      calRangeMinTempC_ = 0F;
      calRangeMaxTempC_ = 0F;
      minDisplayableTempC_ = 0F;
      maxDisplayableTempC_ = 0F;
      minManualPaletteSpanDegreesC_ = 0F;
      minAutoPaletteSpanDegreesC_ = 0F;
      geminiUInverseCurves_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCalRangeIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxCalRangeIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCalRangeMinTempC()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCalRangeMaxTempC()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinDisplayableTempC()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxDisplayableTempC()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinManualPaletteSpanDegreesC()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinAutoPaletteSpanDegreesC()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getGeminiUInverseCurvesCount(); i++) {
        if (!getGeminiUInverseCurves(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, calRangeIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, maxCalRangeIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, calRangeMinTempC_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, calRangeMaxTempC_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, minDisplayableTempC_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, maxDisplayableTempC_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, minManualPaletteSpanDegreesC_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, minAutoPaletteSpanDegreesC_);
      }
      for (int i = 0; i < geminiUInverseCurves_.size(); i++) {
        output.writeMessage(9, geminiUInverseCurves_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, calRangeIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, maxCalRangeIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, calRangeMinTempC_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, calRangeMaxTempC_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, minDisplayableTempC_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, maxDisplayableTempC_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, minManualPaletteSpanDegreesC_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, minAutoPaletteSpanDegreesC_);
      }
      for (int i = 0; i < geminiUInverseCurves_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, geminiUInverseCurves_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CALIBRATION_RANGE_INFO_VGPB}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CALIBRATION_RANGE_INFO_VGPB)
        com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.internal_static_CALIBRATION_RANGE_INFO_VGPB_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.internal_static_CALIBRATION_RANGE_INFO_VGPB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB.class, com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB.Builder.class);
      }

      // Construct using com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGeminiUInverseCurvesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        calRangeIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxCalRangeIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        calRangeMinTempC_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        calRangeMaxTempC_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        minDisplayableTempC_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        maxDisplayableTempC_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        minManualPaletteSpanDegreesC_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        minAutoPaletteSpanDegreesC_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (geminiUInverseCurvesBuilder_ == null) {
          geminiUInverseCurves_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          geminiUInverseCurvesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.internal_static_CALIBRATION_RANGE_INFO_VGPB_descriptor;
      }

      public com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB getDefaultInstanceForType() {
        return com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB.getDefaultInstance();
      }

      public com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB build() {
        com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB buildPartial() {
        com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB result = new com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calRangeIndex_ = calRangeIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxCalRangeIndex_ = maxCalRangeIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.calRangeMinTempC_ = calRangeMinTempC_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.calRangeMaxTempC_ = calRangeMaxTempC_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.minDisplayableTempC_ = minDisplayableTempC_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.maxDisplayableTempC_ = maxDisplayableTempC_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.minManualPaletteSpanDegreesC_ = minManualPaletteSpanDegreesC_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.minAutoPaletteSpanDegreesC_ = minAutoPaletteSpanDegreesC_;
        if (geminiUInverseCurvesBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            geminiUInverseCurves_ = java.util.Collections.unmodifiableList(geminiUInverseCurves_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.geminiUInverseCurves_ = geminiUInverseCurves_;
        } else {
          result.geminiUInverseCurves_ = geminiUInverseCurvesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB) {
          return mergeFrom((com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB other) {
        if (other == com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB.getDefaultInstance()) return this;
        if (other.hasCalRangeIndex()) {
          setCalRangeIndex(other.getCalRangeIndex());
        }
        if (other.hasMaxCalRangeIndex()) {
          setMaxCalRangeIndex(other.getMaxCalRangeIndex());
        }
        if (other.hasCalRangeMinTempC()) {
          setCalRangeMinTempC(other.getCalRangeMinTempC());
        }
        if (other.hasCalRangeMaxTempC()) {
          setCalRangeMaxTempC(other.getCalRangeMaxTempC());
        }
        if (other.hasMinDisplayableTempC()) {
          setMinDisplayableTempC(other.getMinDisplayableTempC());
        }
        if (other.hasMaxDisplayableTempC()) {
          setMaxDisplayableTempC(other.getMaxDisplayableTempC());
        }
        if (other.hasMinManualPaletteSpanDegreesC()) {
          setMinManualPaletteSpanDegreesC(other.getMinManualPaletteSpanDegreesC());
        }
        if (other.hasMinAutoPaletteSpanDegreesC()) {
          setMinAutoPaletteSpanDegreesC(other.getMinAutoPaletteSpanDegreesC());
        }
        if (geminiUInverseCurvesBuilder_ == null) {
          if (!other.geminiUInverseCurves_.isEmpty()) {
            if (geminiUInverseCurves_.isEmpty()) {
              geminiUInverseCurves_ = other.geminiUInverseCurves_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureGeminiUInverseCurvesIsMutable();
              geminiUInverseCurves_.addAll(other.geminiUInverseCurves_);
            }
            onChanged();
          }
        } else {
          if (!other.geminiUInverseCurves_.isEmpty()) {
            if (geminiUInverseCurvesBuilder_.isEmpty()) {
              geminiUInverseCurvesBuilder_.dispose();
              geminiUInverseCurvesBuilder_ = null;
              geminiUInverseCurves_ = other.geminiUInverseCurves_;
              bitField0_ = (bitField0_ & ~0x00000100);
              geminiUInverseCurvesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGeminiUInverseCurvesFieldBuilder() : null;
            } else {
              geminiUInverseCurvesBuilder_.addAllMessages(other.geminiUInverseCurves_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCalRangeIndex()) {
          
          return false;
        }
        if (!hasMaxCalRangeIndex()) {
          
          return false;
        }
        if (!hasCalRangeMinTempC()) {
          
          return false;
        }
        if (!hasCalRangeMaxTempC()) {
          
          return false;
        }
        if (!hasMinDisplayableTempC()) {
          
          return false;
        }
        if (!hasMaxDisplayableTempC()) {
          
          return false;
        }
        if (!hasMinManualPaletteSpanDegreesC()) {
          
          return false;
        }
        if (!hasMinAutoPaletteSpanDegreesC()) {
          
          return false;
        }
        for (int i = 0; i < getGeminiUInverseCurvesCount(); i++) {
          if (!getGeminiUInverseCurves(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.aolais.electroraven.is2viewerbeta.protos.CalibrationRangeInfoVGPB.CALIBRATION_RANGE_INFO_VGPB) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int calRangeIndex_ ;
      /**
       * <code>required int32 calRangeIndex = 1;</code>
       */
      public boolean hasCalRangeIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 calRangeIndex = 1;</code>
       */
      public int getCalRangeIndex() {
        return calRangeIndex_;
      }
      /**
       * <code>required int32 calRangeIndex = 1;</code>
       */
      public Builder setCalRangeIndex(int value) {
        bitField0_ |= 0x00000001;
        calRangeIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 calRangeIndex = 1;</code>
       */
      public Builder clearCalRangeIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        calRangeIndex_ = 0;
        onChanged();
        return this;
      }

      private int maxCalRangeIndex_ ;
      /**
       * <code>required int32 maxCalRangeIndex = 2;</code>
       */
      public boolean hasMaxCalRangeIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 maxCalRangeIndex = 2;</code>
       */
      public int getMaxCalRangeIndex() {
        return maxCalRangeIndex_;
      }
      /**
       * <code>required int32 maxCalRangeIndex = 2;</code>
       */
      public Builder setMaxCalRangeIndex(int value) {
        bitField0_ |= 0x00000002;
        maxCalRangeIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 maxCalRangeIndex = 2;</code>
       */
      public Builder clearMaxCalRangeIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxCalRangeIndex_ = 0;
        onChanged();
        return this;
      }

      private float calRangeMinTempC_ ;
      /**
       * <code>required float calRangeMinTempC = 3;</code>
       */
      public boolean hasCalRangeMinTempC() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float calRangeMinTempC = 3;</code>
       */
      public float getCalRangeMinTempC() {
        return calRangeMinTempC_;
      }
      /**
       * <code>required float calRangeMinTempC = 3;</code>
       */
      public Builder setCalRangeMinTempC(float value) {
        bitField0_ |= 0x00000004;
        calRangeMinTempC_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float calRangeMinTempC = 3;</code>
       */
      public Builder clearCalRangeMinTempC() {
        bitField0_ = (bitField0_ & ~0x00000004);
        calRangeMinTempC_ = 0F;
        onChanged();
        return this;
      }

      private float calRangeMaxTempC_ ;
      /**
       * <code>required float calRangeMaxTempC = 4;</code>
       */
      public boolean hasCalRangeMaxTempC() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required float calRangeMaxTempC = 4;</code>
       */
      public float getCalRangeMaxTempC() {
        return calRangeMaxTempC_;
      }
      /**
       * <code>required float calRangeMaxTempC = 4;</code>
       */
      public Builder setCalRangeMaxTempC(float value) {
        bitField0_ |= 0x00000008;
        calRangeMaxTempC_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float calRangeMaxTempC = 4;</code>
       */
      public Builder clearCalRangeMaxTempC() {
        bitField0_ = (bitField0_ & ~0x00000008);
        calRangeMaxTempC_ = 0F;
        onChanged();
        return this;
      }

      private float minDisplayableTempC_ ;
      /**
       * <code>required float minDisplayableTempC = 5;</code>
       */
      public boolean hasMinDisplayableTempC() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required float minDisplayableTempC = 5;</code>
       */
      public float getMinDisplayableTempC() {
        return minDisplayableTempC_;
      }
      /**
       * <code>required float minDisplayableTempC = 5;</code>
       */
      public Builder setMinDisplayableTempC(float value) {
        bitField0_ |= 0x00000010;
        minDisplayableTempC_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float minDisplayableTempC = 5;</code>
       */
      public Builder clearMinDisplayableTempC() {
        bitField0_ = (bitField0_ & ~0x00000010);
        minDisplayableTempC_ = 0F;
        onChanged();
        return this;
      }

      private float maxDisplayableTempC_ ;
      /**
       * <code>required float maxDisplayableTempC = 6;</code>
       */
      public boolean hasMaxDisplayableTempC() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required float maxDisplayableTempC = 6;</code>
       */
      public float getMaxDisplayableTempC() {
        return maxDisplayableTempC_;
      }
      /**
       * <code>required float maxDisplayableTempC = 6;</code>
       */
      public Builder setMaxDisplayableTempC(float value) {
        bitField0_ |= 0x00000020;
        maxDisplayableTempC_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float maxDisplayableTempC = 6;</code>
       */
      public Builder clearMaxDisplayableTempC() {
        bitField0_ = (bitField0_ & ~0x00000020);
        maxDisplayableTempC_ = 0F;
        onChanged();
        return this;
      }

      private float minManualPaletteSpanDegreesC_ ;
      /**
       * <code>required float minManualPaletteSpanDegreesC = 7;</code>
       */
      public boolean hasMinManualPaletteSpanDegreesC() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required float minManualPaletteSpanDegreesC = 7;</code>
       */
      public float getMinManualPaletteSpanDegreesC() {
        return minManualPaletteSpanDegreesC_;
      }
      /**
       * <code>required float minManualPaletteSpanDegreesC = 7;</code>
       */
      public Builder setMinManualPaletteSpanDegreesC(float value) {
        bitField0_ |= 0x00000040;
        minManualPaletteSpanDegreesC_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float minManualPaletteSpanDegreesC = 7;</code>
       */
      public Builder clearMinManualPaletteSpanDegreesC() {
        bitField0_ = (bitField0_ & ~0x00000040);
        minManualPaletteSpanDegreesC_ = 0F;
        onChanged();
        return this;
      }

      private float minAutoPaletteSpanDegreesC_ ;
      /**
       * <code>required float minAutoPaletteSpanDegreesC = 8;</code>
       */
      public boolean hasMinAutoPaletteSpanDegreesC() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required float minAutoPaletteSpanDegreesC = 8;</code>
       */
      public float getMinAutoPaletteSpanDegreesC() {
        return minAutoPaletteSpanDegreesC_;
      }
      /**
       * <code>required float minAutoPaletteSpanDegreesC = 8;</code>
       */
      public Builder setMinAutoPaletteSpanDegreesC(float value) {
        bitField0_ |= 0x00000080;
        minAutoPaletteSpanDegreesC_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float minAutoPaletteSpanDegreesC = 8;</code>
       */
      public Builder clearMinAutoPaletteSpanDegreesC() {
        bitField0_ = (bitField0_ & ~0x00000080);
        minAutoPaletteSpanDegreesC_ = 0F;
        onChanged();
        return this;
      }

      private java.util.List<com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB> geminiUInverseCurves_ =
        java.util.Collections.emptyList();
      private void ensureGeminiUInverseCurvesIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          geminiUInverseCurves_ = new java.util.ArrayList<com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB>(geminiUInverseCurves_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB, com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB.Builder, com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPBOrBuilder> geminiUInverseCurvesBuilder_;

      /**
       * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
       */
      public java.util.List<com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB> getGeminiUInverseCurvesList() {
        if (geminiUInverseCurvesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(geminiUInverseCurves_);
        } else {
          return geminiUInverseCurvesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
       */
      public int getGeminiUInverseCurvesCount() {
        if (geminiUInverseCurvesBuilder_ == null) {
          return geminiUInverseCurves_.size();
        } else {
          return geminiUInverseCurvesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB getGeminiUInverseCurves(int index) {
        if (geminiUInverseCurvesBuilder_ == null) {
          return geminiUInverseCurves_.get(index);
        } else {
          return geminiUInverseCurvesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
       */
      public Builder setGeminiUInverseCurves(
          int index, com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB value) {
        if (geminiUInverseCurvesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeminiUInverseCurvesIsMutable();
          geminiUInverseCurves_.set(index, value);
          onChanged();
        } else {
          geminiUInverseCurvesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
       */
      public Builder setGeminiUInverseCurves(
          int index, com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB.Builder builderForValue) {
        if (geminiUInverseCurvesBuilder_ == null) {
          ensureGeminiUInverseCurvesIsMutable();
          geminiUInverseCurves_.set(index, builderForValue.build());
          onChanged();
        } else {
          geminiUInverseCurvesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
       */
      public Builder addGeminiUInverseCurves(com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB value) {
        if (geminiUInverseCurvesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeminiUInverseCurvesIsMutable();
          geminiUInverseCurves_.add(value);
          onChanged();
        } else {
          geminiUInverseCurvesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
       */
      public Builder addGeminiUInverseCurves(
          int index, com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB value) {
        if (geminiUInverseCurvesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGeminiUInverseCurvesIsMutable();
          geminiUInverseCurves_.add(index, value);
          onChanged();
        } else {
          geminiUInverseCurvesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
       */
      public Builder addGeminiUInverseCurves(
          com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB.Builder builderForValue) {
        if (geminiUInverseCurvesBuilder_ == null) {
          ensureGeminiUInverseCurvesIsMutable();
          geminiUInverseCurves_.add(builderForValue.build());
          onChanged();
        } else {
          geminiUInverseCurvesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
       */
      public Builder addGeminiUInverseCurves(
          int index, com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB.Builder builderForValue) {
        if (geminiUInverseCurvesBuilder_ == null) {
          ensureGeminiUInverseCurvesIsMutable();
          geminiUInverseCurves_.add(index, builderForValue.build());
          onChanged();
        } else {
          geminiUInverseCurvesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
       */
      public Builder addAllGeminiUInverseCurves(
          java.lang.Iterable<? extends com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB> values) {
        if (geminiUInverseCurvesBuilder_ == null) {
          ensureGeminiUInverseCurvesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, geminiUInverseCurves_);
          onChanged();
        } else {
          geminiUInverseCurvesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
       */
      public Builder clearGeminiUInverseCurves() {
        if (geminiUInverseCurvesBuilder_ == null) {
          geminiUInverseCurves_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          geminiUInverseCurvesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
       */
      public Builder removeGeminiUInverseCurves(int index) {
        if (geminiUInverseCurvesBuilder_ == null) {
          ensureGeminiUInverseCurvesIsMutable();
          geminiUInverseCurves_.remove(index);
          onChanged();
        } else {
          geminiUInverseCurvesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB.Builder getGeminiUInverseCurvesBuilder(
          int index) {
        return getGeminiUInverseCurvesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPBOrBuilder getGeminiUInverseCurvesOrBuilder(
          int index) {
        if (geminiUInverseCurvesBuilder_ == null) {
          return geminiUInverseCurves_.get(index);  } else {
          return geminiUInverseCurvesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
       */
      public java.util.List<? extends com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPBOrBuilder> 
           getGeminiUInverseCurvesOrBuilderList() {
        if (geminiUInverseCurvesBuilder_ != null) {
          return geminiUInverseCurvesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(geminiUInverseCurves_);
        }
      }
      /**
       * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB.Builder addGeminiUInverseCurvesBuilder() {
        return getGeminiUInverseCurvesFieldBuilder().addBuilder(
            com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB.getDefaultInstance());
      }
      /**
       * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB.Builder addGeminiUInverseCurvesBuilder(
          int index) {
        return getGeminiUInverseCurvesFieldBuilder().addBuilder(
            index, com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB.getDefaultInstance());
      }
      /**
       * <code>repeated .GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB geminiUInverseCurves = 9;</code>
       */
      public java.util.List<com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB.Builder> 
           getGeminiUInverseCurvesBuilderList() {
        return getGeminiUInverseCurvesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB, com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB.Builder, com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPBOrBuilder> 
          getGeminiUInverseCurvesFieldBuilder() {
        if (geminiUInverseCurvesBuilder_ == null) {
          geminiUInverseCurvesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB, com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPB.Builder, com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.GEMINI_UINVERSE_CURVE_DESCRIPTOR_VGPBOrBuilder>(
                  geminiUInverseCurves_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          geminiUInverseCurves_ = null;
        }
        return geminiUInverseCurvesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CALIBRATION_RANGE_INFO_VGPB)
    }

    static {
      defaultInstance = new CALIBRATION_RANGE_INFO_VGPB(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CALIBRATION_RANGE_INFO_VGPB)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CALIBRATION_RANGE_INFO_VGPB_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CALIBRATION_RANGE_INFO_VGPB_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!CALIBRATION_RANGE_INFO_VGPB.proto\032+GEM" +
      "INI_UINVERSE_CURVE_DESCRIPTOR_VGPB.proto" +
      "\"\314\002\n\033CALIBRATION_RANGE_INFO_VGPB\022\025\n\rcalR" +
      "angeIndex\030\001 \002(\005\022\030\n\020maxCalRangeIndex\030\002 \002(" +
      "\005\022\030\n\020calRangeMinTempC\030\003 \002(\002\022\030\n\020calRangeM" +
      "axTempC\030\004 \002(\002\022\033\n\023minDisplayableTempC\030\005 \002" +
      "(\002\022\033\n\023maxDisplayableTempC\030\006 \002(\002\022$\n\034minMa" +
      "nualPaletteSpanDegreesC\030\007 \002(\002\022\"\n\032minAuto" +
      "PaletteSpanDegreesC\030\010 \002(\002\022D\n\024geminiUInve" +
      "rseCurves\030\t \003(\0132&.GEMINI_UINVERSE_CURVE_",
      "DESCRIPTOR_VGPBBH\n,com.aolais.electrorav" +
      "en.is2viewerbeta.protosB\030CalibrationRang" +
      "eInfoVGPB"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.getDescriptor(),
        }, assigner);
    internal_static_CALIBRATION_RANGE_INFO_VGPB_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CALIBRATION_RANGE_INFO_VGPB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CALIBRATION_RANGE_INFO_VGPB_descriptor,
        new java.lang.String[] { "CalRangeIndex", "MaxCalRangeIndex", "CalRangeMinTempC", "CalRangeMaxTempC", "MinDisplayableTempC", "MaxDisplayableTempC", "MinManualPaletteSpanDegreesC", "MinAutoPaletteSpanDegreesC", "GeminiUInverseCurves", });
    com.aolais.electroraven.is2viewerbeta.protos.GeminiUniverseCurveDescriptorVGPB.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
