// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VL_IMAGE_METADATA_VGPB.proto

package com.aolais.electroraven.is2viewerbeta.protos;

public final class VlImageMetadataVGPB {
  private VlImageMetadataVGPB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code VL_DATA_FORMAT}
   */
  public enum VL_DATA_FORMAT
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>VL_DATA_FORMAT_INVALID = 0;</code>
     */
    VL_DATA_FORMAT_INVALID(0, 0),
    /**
     * <code>VL_DATA_FORMAT_TOP_DOWN_RGB565 = 1;</code>
     */
    VL_DATA_FORMAT_TOP_DOWN_RGB565(1, 1),
    /**
     * <code>VL_DATA_FORMAT_JPEG = 2;</code>
     */
    VL_DATA_FORMAT_JPEG(2, 2),
    /**
     * <code>VL_DATA_FORMAT_TOP_DOWN_ARGB32 = 3;</code>
     */
    VL_DATA_FORMAT_TOP_DOWN_ARGB32(3, 3),
    ;

    /**
     * <code>VL_DATA_FORMAT_INVALID = 0;</code>
     */
    public static final int VL_DATA_FORMAT_INVALID_VALUE = 0;
    /**
     * <code>VL_DATA_FORMAT_TOP_DOWN_RGB565 = 1;</code>
     */
    public static final int VL_DATA_FORMAT_TOP_DOWN_RGB565_VALUE = 1;
    /**
     * <code>VL_DATA_FORMAT_JPEG = 2;</code>
     */
    public static final int VL_DATA_FORMAT_JPEG_VALUE = 2;
    /**
     * <code>VL_DATA_FORMAT_TOP_DOWN_ARGB32 = 3;</code>
     */
    public static final int VL_DATA_FORMAT_TOP_DOWN_ARGB32_VALUE = 3;


    public final int getNumber() { return value; }

    public static VL_DATA_FORMAT valueOf(int value) {
      switch (value) {
        case 0: return VL_DATA_FORMAT_INVALID;
        case 1: return VL_DATA_FORMAT_TOP_DOWN_RGB565;
        case 2: return VL_DATA_FORMAT_JPEG;
        case 3: return VL_DATA_FORMAT_TOP_DOWN_ARGB32;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VL_DATA_FORMAT>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<VL_DATA_FORMAT>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VL_DATA_FORMAT>() {
            public VL_DATA_FORMAT findValueByNumber(int number) {
              return VL_DATA_FORMAT.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.getDescriptor().getEnumTypes().get(0);
    }

    private static final VL_DATA_FORMAT[] VALUES = values();

    public static VL_DATA_FORMAT valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private VL_DATA_FORMAT(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:VL_DATA_FORMAT)
  }

  /**
   * Protobuf enum {@code DATA_ORIENT}
   */
  public enum DATA_ORIENT
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DATA_ORIENT_NO_CHANGE = 0;</code>
     */
    DATA_ORIENT_NO_CHANGE(0, 0),
    /**
     * <code>DATA_ORIENT_ROTATE_90CW = 1;</code>
     */
    DATA_ORIENT_ROTATE_90CW(1, 1),
    /**
     * <code>DATA_ORIENT_ROTATE_90CCW = 2;</code>
     */
    DATA_ORIENT_ROTATE_90CCW(2, 2),
    /**
     * <code>DATA_ORIENT_ROTATE_180 = 3;</code>
     */
    DATA_ORIENT_ROTATE_180(3, 3),
    /**
     * <code>DATA_ORIENT_FLIP_VERT_ROTATE_90CW = 4;</code>
     */
    DATA_ORIENT_FLIP_VERT_ROTATE_90CW(4, 4),
    /**
     * <code>DATA_ORIENT_FLIP_VERT_ROTATE_90CCW = 5;</code>
     */
    DATA_ORIENT_FLIP_VERT_ROTATE_90CCW(5, 5),
    /**
     * <code>DATA_ORIENT_FLIP_VERT_ROTATE_180 = 6;</code>
     */
    DATA_ORIENT_FLIP_VERT_ROTATE_180(6, 6),
    /**
     * <code>DATA_ORIENT_FLIP_HORZ_ROTATE_90CW = 7;</code>
     */
    DATA_ORIENT_FLIP_HORZ_ROTATE_90CW(7, 7),
    /**
     * <code>DATA_ORIENT_FLIP_HORZ_ROTATE_90CCW = 8;</code>
     */
    DATA_ORIENT_FLIP_HORZ_ROTATE_90CCW(8, 8),
    /**
     * <code>DATA_ORIENT_FLIP_HORZ_ROTATE_180 = 9;</code>
     */
    DATA_ORIENT_FLIP_HORZ_ROTATE_180(9, 9),
    ;

    /**
     * <code>DATA_ORIENT_NO_CHANGE = 0;</code>
     */
    public static final int DATA_ORIENT_NO_CHANGE_VALUE = 0;
    /**
     * <code>DATA_ORIENT_ROTATE_90CW = 1;</code>
     */
    public static final int DATA_ORIENT_ROTATE_90CW_VALUE = 1;
    /**
     * <code>DATA_ORIENT_ROTATE_90CCW = 2;</code>
     */
    public static final int DATA_ORIENT_ROTATE_90CCW_VALUE = 2;
    /**
     * <code>DATA_ORIENT_ROTATE_180 = 3;</code>
     */
    public static final int DATA_ORIENT_ROTATE_180_VALUE = 3;
    /**
     * <code>DATA_ORIENT_FLIP_VERT_ROTATE_90CW = 4;</code>
     */
    public static final int DATA_ORIENT_FLIP_VERT_ROTATE_90CW_VALUE = 4;
    /**
     * <code>DATA_ORIENT_FLIP_VERT_ROTATE_90CCW = 5;</code>
     */
    public static final int DATA_ORIENT_FLIP_VERT_ROTATE_90CCW_VALUE = 5;
    /**
     * <code>DATA_ORIENT_FLIP_VERT_ROTATE_180 = 6;</code>
     */
    public static final int DATA_ORIENT_FLIP_VERT_ROTATE_180_VALUE = 6;
    /**
     * <code>DATA_ORIENT_FLIP_HORZ_ROTATE_90CW = 7;</code>
     */
    public static final int DATA_ORIENT_FLIP_HORZ_ROTATE_90CW_VALUE = 7;
    /**
     * <code>DATA_ORIENT_FLIP_HORZ_ROTATE_90CCW = 8;</code>
     */
    public static final int DATA_ORIENT_FLIP_HORZ_ROTATE_90CCW_VALUE = 8;
    /**
     * <code>DATA_ORIENT_FLIP_HORZ_ROTATE_180 = 9;</code>
     */
    public static final int DATA_ORIENT_FLIP_HORZ_ROTATE_180_VALUE = 9;


    public final int getNumber() { return value; }

    public static DATA_ORIENT valueOf(int value) {
      switch (value) {
        case 0: return DATA_ORIENT_NO_CHANGE;
        case 1: return DATA_ORIENT_ROTATE_90CW;
        case 2: return DATA_ORIENT_ROTATE_90CCW;
        case 3: return DATA_ORIENT_ROTATE_180;
        case 4: return DATA_ORIENT_FLIP_VERT_ROTATE_90CW;
        case 5: return DATA_ORIENT_FLIP_VERT_ROTATE_90CCW;
        case 6: return DATA_ORIENT_FLIP_VERT_ROTATE_180;
        case 7: return DATA_ORIENT_FLIP_HORZ_ROTATE_90CW;
        case 8: return DATA_ORIENT_FLIP_HORZ_ROTATE_90CCW;
        case 9: return DATA_ORIENT_FLIP_HORZ_ROTATE_180;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DATA_ORIENT>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DATA_ORIENT>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DATA_ORIENT>() {
            public DATA_ORIENT findValueByNumber(int number) {
              return DATA_ORIENT.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.getDescriptor().getEnumTypes().get(1);
    }

    private static final DATA_ORIENT[] VALUES = values();

    public static DATA_ORIENT valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DATA_ORIENT(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DATA_ORIENT)
  }

  public interface VL_IMAGE_METADATA_VGPBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:VL_IMAGE_METADATA_VGPB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 vlDataWidth = 1;</code>
     */
    boolean hasVlDataWidth();
    /**
     * <code>required int32 vlDataWidth = 1;</code>
     */
    int getVlDataWidth();

    /**
     * <code>required int32 vlDataHeight = 2;</code>
     */
    boolean hasVlDataHeight();
    /**
     * <code>required int32 vlDataHeight = 2;</code>
     */
    int getVlDataHeight();

    /**
     * <code>required int32 fovImageWidth = 3;</code>
     */
    boolean hasFovImageWidth();
    /**
     * <code>required int32 fovImageWidth = 3;</code>
     */
    int getFovImageWidth();

    /**
     * <code>required int32 fovImageHeight = 4;</code>
     */
    boolean hasFovImageHeight();
    /**
     * <code>required int32 fovImageHeight = 4;</code>
     */
    int getFovImageHeight();

    /**
     * <code>required int32 fovDataRequired = 5;</code>
     */
    boolean hasFovDataRequired();
    /**
     * <code>required int32 fovDataRequired = 5;</code>
     */
    int getFovDataRequired();

    /**
     * <code>required .VL_DATA_FORMAT fovDataFormat = 6;</code>
     */
    boolean hasFovDataFormat();
    /**
     * <code>required .VL_DATA_FORMAT fovDataFormat = 6;</code>
     */
    com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT getFovDataFormat();

    /**
     * <code>required .VL_DATA_FORMAT vlDataFormat = 7;</code>
     */
    boolean hasVlDataFormat();
    /**
     * <code>required .VL_DATA_FORMAT vlDataFormat = 7;</code>
     */
    com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT getVlDataFormat();

    /**
     * <code>optional .DATA_ORIENT vlOrientation = 8;</code>
     */
    boolean hasVlOrientation();
    /**
     * <code>optional .DATA_ORIENT vlOrientation = 8;</code>
     */
    com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.DATA_ORIENT getVlOrientation();

    /**
     * <code>required int32 pipModeAreaWidth = 9;</code>
     */
    boolean hasPipModeAreaWidth();
    /**
     * <code>required int32 pipModeAreaWidth = 9;</code>
     */
    int getPipModeAreaWidth();

    /**
     * <code>required int32 pipModeAreaHeight = 10;</code>
     */
    boolean hasPipModeAreaHeight();
    /**
     * <code>required int32 pipModeAreaHeight = 10;</code>
     */
    int getPipModeAreaHeight();

    /**
     * <code>required int32 pipModeFOVWindowX = 11;</code>
     */
    boolean hasPipModeFOVWindowX();
    /**
     * <code>required int32 pipModeFOVWindowX = 11;</code>
     */
    int getPipModeFOVWindowX();

    /**
     * <code>required int32 pipModeFOVWindowY = 12;</code>
     */
    boolean hasPipModeFOVWindowY();
    /**
     * <code>required int32 pipModeFOVWindowY = 12;</code>
     */
    int getPipModeFOVWindowY();

    /**
     * <code>required int32 pipModeFOVWindowWidth = 13;</code>
     */
    boolean hasPipModeFOVWindowWidth();
    /**
     * <code>required int32 pipModeFOVWindowWidth = 13;</code>
     */
    int getPipModeFOVWindowWidth();

    /**
     * <code>required int32 pipModeFOVWindowHeight = 14;</code>
     */
    boolean hasPipModeFOVWindowHeight();
    /**
     * <code>required int32 pipModeFOVWindowHeight = 14;</code>
     */
    int getPipModeFOVWindowHeight();

    /**
     * <code>required int32 fsModeFOVWindowX = 15;</code>
     */
    boolean hasFsModeFOVWindowX();
    /**
     * <code>required int32 fsModeFOVWindowX = 15;</code>
     */
    int getFsModeFOVWindowX();

    /**
     * <code>required int32 fsModeFOVWindowY = 16;</code>
     */
    boolean hasFsModeFOVWindowY();
    /**
     * <code>required int32 fsModeFOVWindowY = 16;</code>
     */
    int getFsModeFOVWindowY();

    /**
     * <code>required int32 fsModeFOVWindowWidth = 17;</code>
     */
    boolean hasFsModeFOVWindowWidth();
    /**
     * <code>required int32 fsModeFOVWindowWidth = 17;</code>
     */
    int getFsModeFOVWindowWidth();

    /**
     * <code>required int32 fsModeFOVWindowHeight = 18;</code>
     */
    boolean hasFsModeFOVWindowHeight();
    /**
     * <code>required int32 fsModeFOVWindowHeight = 18;</code>
     */
    int getFsModeFOVWindowHeight();
  }
  /**
   * Protobuf type {@code VL_IMAGE_METADATA_VGPB}
   */
  public static final class VL_IMAGE_METADATA_VGPB extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:VL_IMAGE_METADATA_VGPB)
      VL_IMAGE_METADATA_VGPBOrBuilder {
    // Use VL_IMAGE_METADATA_VGPB.newBuilder() to construct.
    private VL_IMAGE_METADATA_VGPB(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private VL_IMAGE_METADATA_VGPB(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final VL_IMAGE_METADATA_VGPB defaultInstance;
    public static VL_IMAGE_METADATA_VGPB getDefaultInstance() {
      return defaultInstance;
    }

    public VL_IMAGE_METADATA_VGPB getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private VL_IMAGE_METADATA_VGPB(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              vlDataWidth_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              vlDataHeight_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              fovImageWidth_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              fovImageHeight_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              fovDataRequired_ = input.readInt32();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT value = com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                fovDataFormat_ = value;
              }
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT value = com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                vlDataFormat_ = value;
              }
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.DATA_ORIENT value = com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.DATA_ORIENT.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                vlOrientation_ = value;
              }
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              pipModeAreaWidth_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              pipModeAreaHeight_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              pipModeFOVWindowX_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              pipModeFOVWindowY_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              pipModeFOVWindowWidth_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              pipModeFOVWindowHeight_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              fsModeFOVWindowX_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              fsModeFOVWindowY_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              fsModeFOVWindowWidth_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              fsModeFOVWindowHeight_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.internal_static_VL_IMAGE_METADATA_VGPB_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.internal_static_VL_IMAGE_METADATA_VGPB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB.class, com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB.Builder.class);
    }

    public static com.google.protobuf.Parser<VL_IMAGE_METADATA_VGPB> PARSER =
        new com.google.protobuf.AbstractParser<VL_IMAGE_METADATA_VGPB>() {
      public VL_IMAGE_METADATA_VGPB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VL_IMAGE_METADATA_VGPB(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<VL_IMAGE_METADATA_VGPB> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VLDATAWIDTH_FIELD_NUMBER = 1;
    private int vlDataWidth_;
    /**
     * <code>required int32 vlDataWidth = 1;</code>
     */
    public boolean hasVlDataWidth() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 vlDataWidth = 1;</code>
     */
    public int getVlDataWidth() {
      return vlDataWidth_;
    }

    public static final int VLDATAHEIGHT_FIELD_NUMBER = 2;
    private int vlDataHeight_;
    /**
     * <code>required int32 vlDataHeight = 2;</code>
     */
    public boolean hasVlDataHeight() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 vlDataHeight = 2;</code>
     */
    public int getVlDataHeight() {
      return vlDataHeight_;
    }

    public static final int FOVIMAGEWIDTH_FIELD_NUMBER = 3;
    private int fovImageWidth_;
    /**
     * <code>required int32 fovImageWidth = 3;</code>
     */
    public boolean hasFovImageWidth() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 fovImageWidth = 3;</code>
     */
    public int getFovImageWidth() {
      return fovImageWidth_;
    }

    public static final int FOVIMAGEHEIGHT_FIELD_NUMBER = 4;
    private int fovImageHeight_;
    /**
     * <code>required int32 fovImageHeight = 4;</code>
     */
    public boolean hasFovImageHeight() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 fovImageHeight = 4;</code>
     */
    public int getFovImageHeight() {
      return fovImageHeight_;
    }

    public static final int FOVDATAREQUIRED_FIELD_NUMBER = 5;
    private int fovDataRequired_;
    /**
     * <code>required int32 fovDataRequired = 5;</code>
     */
    public boolean hasFovDataRequired() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 fovDataRequired = 5;</code>
     */
    public int getFovDataRequired() {
      return fovDataRequired_;
    }

    public static final int FOVDATAFORMAT_FIELD_NUMBER = 6;
    private com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT fovDataFormat_;
    /**
     * <code>required .VL_DATA_FORMAT fovDataFormat = 6;</code>
     */
    public boolean hasFovDataFormat() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required .VL_DATA_FORMAT fovDataFormat = 6;</code>
     */
    public com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT getFovDataFormat() {
      return fovDataFormat_;
    }

    public static final int VLDATAFORMAT_FIELD_NUMBER = 7;
    private com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT vlDataFormat_;
    /**
     * <code>required .VL_DATA_FORMAT vlDataFormat = 7;</code>
     */
    public boolean hasVlDataFormat() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required .VL_DATA_FORMAT vlDataFormat = 7;</code>
     */
    public com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT getVlDataFormat() {
      return vlDataFormat_;
    }

    public static final int VLORIENTATION_FIELD_NUMBER = 8;
    private com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.DATA_ORIENT vlOrientation_;
    /**
     * <code>optional .DATA_ORIENT vlOrientation = 8;</code>
     */
    public boolean hasVlOrientation() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .DATA_ORIENT vlOrientation = 8;</code>
     */
    public com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.DATA_ORIENT getVlOrientation() {
      return vlOrientation_;
    }

    public static final int PIPMODEAREAWIDTH_FIELD_NUMBER = 9;
    private int pipModeAreaWidth_;
    /**
     * <code>required int32 pipModeAreaWidth = 9;</code>
     */
    public boolean hasPipModeAreaWidth() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 pipModeAreaWidth = 9;</code>
     */
    public int getPipModeAreaWidth() {
      return pipModeAreaWidth_;
    }

    public static final int PIPMODEAREAHEIGHT_FIELD_NUMBER = 10;
    private int pipModeAreaHeight_;
    /**
     * <code>required int32 pipModeAreaHeight = 10;</code>
     */
    public boolean hasPipModeAreaHeight() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int32 pipModeAreaHeight = 10;</code>
     */
    public int getPipModeAreaHeight() {
      return pipModeAreaHeight_;
    }

    public static final int PIPMODEFOVWINDOWX_FIELD_NUMBER = 11;
    private int pipModeFOVWindowX_;
    /**
     * <code>required int32 pipModeFOVWindowX = 11;</code>
     */
    public boolean hasPipModeFOVWindowX() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required int32 pipModeFOVWindowX = 11;</code>
     */
    public int getPipModeFOVWindowX() {
      return pipModeFOVWindowX_;
    }

    public static final int PIPMODEFOVWINDOWY_FIELD_NUMBER = 12;
    private int pipModeFOVWindowY_;
    /**
     * <code>required int32 pipModeFOVWindowY = 12;</code>
     */
    public boolean hasPipModeFOVWindowY() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required int32 pipModeFOVWindowY = 12;</code>
     */
    public int getPipModeFOVWindowY() {
      return pipModeFOVWindowY_;
    }

    public static final int PIPMODEFOVWINDOWWIDTH_FIELD_NUMBER = 13;
    private int pipModeFOVWindowWidth_;
    /**
     * <code>required int32 pipModeFOVWindowWidth = 13;</code>
     */
    public boolean hasPipModeFOVWindowWidth() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required int32 pipModeFOVWindowWidth = 13;</code>
     */
    public int getPipModeFOVWindowWidth() {
      return pipModeFOVWindowWidth_;
    }

    public static final int PIPMODEFOVWINDOWHEIGHT_FIELD_NUMBER = 14;
    private int pipModeFOVWindowHeight_;
    /**
     * <code>required int32 pipModeFOVWindowHeight = 14;</code>
     */
    public boolean hasPipModeFOVWindowHeight() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required int32 pipModeFOVWindowHeight = 14;</code>
     */
    public int getPipModeFOVWindowHeight() {
      return pipModeFOVWindowHeight_;
    }

    public static final int FSMODEFOVWINDOWX_FIELD_NUMBER = 15;
    private int fsModeFOVWindowX_;
    /**
     * <code>required int32 fsModeFOVWindowX = 15;</code>
     */
    public boolean hasFsModeFOVWindowX() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>required int32 fsModeFOVWindowX = 15;</code>
     */
    public int getFsModeFOVWindowX() {
      return fsModeFOVWindowX_;
    }

    public static final int FSMODEFOVWINDOWY_FIELD_NUMBER = 16;
    private int fsModeFOVWindowY_;
    /**
     * <code>required int32 fsModeFOVWindowY = 16;</code>
     */
    public boolean hasFsModeFOVWindowY() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>required int32 fsModeFOVWindowY = 16;</code>
     */
    public int getFsModeFOVWindowY() {
      return fsModeFOVWindowY_;
    }

    public static final int FSMODEFOVWINDOWWIDTH_FIELD_NUMBER = 17;
    private int fsModeFOVWindowWidth_;
    /**
     * <code>required int32 fsModeFOVWindowWidth = 17;</code>
     */
    public boolean hasFsModeFOVWindowWidth() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>required int32 fsModeFOVWindowWidth = 17;</code>
     */
    public int getFsModeFOVWindowWidth() {
      return fsModeFOVWindowWidth_;
    }

    public static final int FSMODEFOVWINDOWHEIGHT_FIELD_NUMBER = 18;
    private int fsModeFOVWindowHeight_;
    /**
     * <code>required int32 fsModeFOVWindowHeight = 18;</code>
     */
    public boolean hasFsModeFOVWindowHeight() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>required int32 fsModeFOVWindowHeight = 18;</code>
     */
    public int getFsModeFOVWindowHeight() {
      return fsModeFOVWindowHeight_;
    }

    private void initFields() {
      vlDataWidth_ = 0;
      vlDataHeight_ = 0;
      fovImageWidth_ = 0;
      fovImageHeight_ = 0;
      fovDataRequired_ = 0;
      fovDataFormat_ = com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT.VL_DATA_FORMAT_INVALID;
      vlDataFormat_ = com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT.VL_DATA_FORMAT_INVALID;
      vlOrientation_ = com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.DATA_ORIENT.DATA_ORIENT_NO_CHANGE;
      pipModeAreaWidth_ = 0;
      pipModeAreaHeight_ = 0;
      pipModeFOVWindowX_ = 0;
      pipModeFOVWindowY_ = 0;
      pipModeFOVWindowWidth_ = 0;
      pipModeFOVWindowHeight_ = 0;
      fsModeFOVWindowX_ = 0;
      fsModeFOVWindowY_ = 0;
      fsModeFOVWindowWidth_ = 0;
      fsModeFOVWindowHeight_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasVlDataWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVlDataHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFovImageWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFovImageHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFovDataRequired()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFovDataFormat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVlDataFormat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPipModeAreaWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPipModeAreaHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPipModeFOVWindowX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPipModeFOVWindowY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPipModeFOVWindowWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPipModeFOVWindowHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFsModeFOVWindowX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFsModeFOVWindowY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFsModeFOVWindowWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFsModeFOVWindowHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, vlDataWidth_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, vlDataHeight_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, fovImageWidth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, fovImageHeight_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, fovDataRequired_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, fovDataFormat_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(7, vlDataFormat_.getNumber());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(8, vlOrientation_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, pipModeAreaWidth_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, pipModeAreaHeight_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, pipModeFOVWindowX_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, pipModeFOVWindowY_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, pipModeFOVWindowWidth_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, pipModeFOVWindowHeight_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, fsModeFOVWindowX_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, fsModeFOVWindowY_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, fsModeFOVWindowWidth_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, fsModeFOVWindowHeight_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, vlDataWidth_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, vlDataHeight_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, fovImageWidth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, fovImageHeight_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, fovDataRequired_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, fovDataFormat_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, vlDataFormat_.getNumber());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, vlOrientation_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, pipModeAreaWidth_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, pipModeAreaHeight_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, pipModeFOVWindowX_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, pipModeFOVWindowY_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, pipModeFOVWindowWidth_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, pipModeFOVWindowHeight_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, fsModeFOVWindowX_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, fsModeFOVWindowY_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, fsModeFOVWindowWidth_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, fsModeFOVWindowHeight_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code VL_IMAGE_METADATA_VGPB}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:VL_IMAGE_METADATA_VGPB)
        com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.internal_static_VL_IMAGE_METADATA_VGPB_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.internal_static_VL_IMAGE_METADATA_VGPB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB.class, com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB.Builder.class);
      }

      // Construct using com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        vlDataWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        vlDataHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        fovImageWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        fovImageHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        fovDataRequired_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        fovDataFormat_ = com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT.VL_DATA_FORMAT_INVALID;
        bitField0_ = (bitField0_ & ~0x00000020);
        vlDataFormat_ = com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT.VL_DATA_FORMAT_INVALID;
        bitField0_ = (bitField0_ & ~0x00000040);
        vlOrientation_ = com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.DATA_ORIENT.DATA_ORIENT_NO_CHANGE;
        bitField0_ = (bitField0_ & ~0x00000080);
        pipModeAreaWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        pipModeAreaHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        pipModeFOVWindowX_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        pipModeFOVWindowY_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        pipModeFOVWindowWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        pipModeFOVWindowHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        fsModeFOVWindowX_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        fsModeFOVWindowY_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        fsModeFOVWindowWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        fsModeFOVWindowHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.internal_static_VL_IMAGE_METADATA_VGPB_descriptor;
      }

      public com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB getDefaultInstanceForType() {
        return com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB.getDefaultInstance();
      }

      public com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB build() {
        com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB buildPartial() {
        com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB result = new com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.vlDataWidth_ = vlDataWidth_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.vlDataHeight_ = vlDataHeight_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fovImageWidth_ = fovImageWidth_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fovImageHeight_ = fovImageHeight_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.fovDataRequired_ = fovDataRequired_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.fovDataFormat_ = fovDataFormat_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.vlDataFormat_ = vlDataFormat_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.vlOrientation_ = vlOrientation_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.pipModeAreaWidth_ = pipModeAreaWidth_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.pipModeAreaHeight_ = pipModeAreaHeight_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.pipModeFOVWindowX_ = pipModeFOVWindowX_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.pipModeFOVWindowY_ = pipModeFOVWindowY_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.pipModeFOVWindowWidth_ = pipModeFOVWindowWidth_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.pipModeFOVWindowHeight_ = pipModeFOVWindowHeight_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.fsModeFOVWindowX_ = fsModeFOVWindowX_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.fsModeFOVWindowY_ = fsModeFOVWindowY_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.fsModeFOVWindowWidth_ = fsModeFOVWindowWidth_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.fsModeFOVWindowHeight_ = fsModeFOVWindowHeight_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB) {
          return mergeFrom((com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB other) {
        if (other == com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB.getDefaultInstance()) return this;
        if (other.hasVlDataWidth()) {
          setVlDataWidth(other.getVlDataWidth());
        }
        if (other.hasVlDataHeight()) {
          setVlDataHeight(other.getVlDataHeight());
        }
        if (other.hasFovImageWidth()) {
          setFovImageWidth(other.getFovImageWidth());
        }
        if (other.hasFovImageHeight()) {
          setFovImageHeight(other.getFovImageHeight());
        }
        if (other.hasFovDataRequired()) {
          setFovDataRequired(other.getFovDataRequired());
        }
        if (other.hasFovDataFormat()) {
          setFovDataFormat(other.getFovDataFormat());
        }
        if (other.hasVlDataFormat()) {
          setVlDataFormat(other.getVlDataFormat());
        }
        if (other.hasVlOrientation()) {
          setVlOrientation(other.getVlOrientation());
        }
        if (other.hasPipModeAreaWidth()) {
          setPipModeAreaWidth(other.getPipModeAreaWidth());
        }
        if (other.hasPipModeAreaHeight()) {
          setPipModeAreaHeight(other.getPipModeAreaHeight());
        }
        if (other.hasPipModeFOVWindowX()) {
          setPipModeFOVWindowX(other.getPipModeFOVWindowX());
        }
        if (other.hasPipModeFOVWindowY()) {
          setPipModeFOVWindowY(other.getPipModeFOVWindowY());
        }
        if (other.hasPipModeFOVWindowWidth()) {
          setPipModeFOVWindowWidth(other.getPipModeFOVWindowWidth());
        }
        if (other.hasPipModeFOVWindowHeight()) {
          setPipModeFOVWindowHeight(other.getPipModeFOVWindowHeight());
        }
        if (other.hasFsModeFOVWindowX()) {
          setFsModeFOVWindowX(other.getFsModeFOVWindowX());
        }
        if (other.hasFsModeFOVWindowY()) {
          setFsModeFOVWindowY(other.getFsModeFOVWindowY());
        }
        if (other.hasFsModeFOVWindowWidth()) {
          setFsModeFOVWindowWidth(other.getFsModeFOVWindowWidth());
        }
        if (other.hasFsModeFOVWindowHeight()) {
          setFsModeFOVWindowHeight(other.getFsModeFOVWindowHeight());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasVlDataWidth()) {
          
          return false;
        }
        if (!hasVlDataHeight()) {
          
          return false;
        }
        if (!hasFovImageWidth()) {
          
          return false;
        }
        if (!hasFovImageHeight()) {
          
          return false;
        }
        if (!hasFovDataRequired()) {
          
          return false;
        }
        if (!hasFovDataFormat()) {
          
          return false;
        }
        if (!hasVlDataFormat()) {
          
          return false;
        }
        if (!hasPipModeAreaWidth()) {
          
          return false;
        }
        if (!hasPipModeAreaHeight()) {
          
          return false;
        }
        if (!hasPipModeFOVWindowX()) {
          
          return false;
        }
        if (!hasPipModeFOVWindowY()) {
          
          return false;
        }
        if (!hasPipModeFOVWindowWidth()) {
          
          return false;
        }
        if (!hasPipModeFOVWindowHeight()) {
          
          return false;
        }
        if (!hasFsModeFOVWindowX()) {
          
          return false;
        }
        if (!hasFsModeFOVWindowY()) {
          
          return false;
        }
        if (!hasFsModeFOVWindowWidth()) {
          
          return false;
        }
        if (!hasFsModeFOVWindowHeight()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_IMAGE_METADATA_VGPB) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int vlDataWidth_ ;
      /**
       * <code>required int32 vlDataWidth = 1;</code>
       */
      public boolean hasVlDataWidth() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 vlDataWidth = 1;</code>
       */
      public int getVlDataWidth() {
        return vlDataWidth_;
      }
      /**
       * <code>required int32 vlDataWidth = 1;</code>
       */
      public Builder setVlDataWidth(int value) {
        bitField0_ |= 0x00000001;
        vlDataWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 vlDataWidth = 1;</code>
       */
      public Builder clearVlDataWidth() {
        bitField0_ = (bitField0_ & ~0x00000001);
        vlDataWidth_ = 0;
        onChanged();
        return this;
      }

      private int vlDataHeight_ ;
      /**
       * <code>required int32 vlDataHeight = 2;</code>
       */
      public boolean hasVlDataHeight() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 vlDataHeight = 2;</code>
       */
      public int getVlDataHeight() {
        return vlDataHeight_;
      }
      /**
       * <code>required int32 vlDataHeight = 2;</code>
       */
      public Builder setVlDataHeight(int value) {
        bitField0_ |= 0x00000002;
        vlDataHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 vlDataHeight = 2;</code>
       */
      public Builder clearVlDataHeight() {
        bitField0_ = (bitField0_ & ~0x00000002);
        vlDataHeight_ = 0;
        onChanged();
        return this;
      }

      private int fovImageWidth_ ;
      /**
       * <code>required int32 fovImageWidth = 3;</code>
       */
      public boolean hasFovImageWidth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 fovImageWidth = 3;</code>
       */
      public int getFovImageWidth() {
        return fovImageWidth_;
      }
      /**
       * <code>required int32 fovImageWidth = 3;</code>
       */
      public Builder setFovImageWidth(int value) {
        bitField0_ |= 0x00000004;
        fovImageWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 fovImageWidth = 3;</code>
       */
      public Builder clearFovImageWidth() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fovImageWidth_ = 0;
        onChanged();
        return this;
      }

      private int fovImageHeight_ ;
      /**
       * <code>required int32 fovImageHeight = 4;</code>
       */
      public boolean hasFovImageHeight() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 fovImageHeight = 4;</code>
       */
      public int getFovImageHeight() {
        return fovImageHeight_;
      }
      /**
       * <code>required int32 fovImageHeight = 4;</code>
       */
      public Builder setFovImageHeight(int value) {
        bitField0_ |= 0x00000008;
        fovImageHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 fovImageHeight = 4;</code>
       */
      public Builder clearFovImageHeight() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fovImageHeight_ = 0;
        onChanged();
        return this;
      }

      private int fovDataRequired_ ;
      /**
       * <code>required int32 fovDataRequired = 5;</code>
       */
      public boolean hasFovDataRequired() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 fovDataRequired = 5;</code>
       */
      public int getFovDataRequired() {
        return fovDataRequired_;
      }
      /**
       * <code>required int32 fovDataRequired = 5;</code>
       */
      public Builder setFovDataRequired(int value) {
        bitField0_ |= 0x00000010;
        fovDataRequired_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 fovDataRequired = 5;</code>
       */
      public Builder clearFovDataRequired() {
        bitField0_ = (bitField0_ & ~0x00000010);
        fovDataRequired_ = 0;
        onChanged();
        return this;
      }

      private com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT fovDataFormat_ = com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT.VL_DATA_FORMAT_INVALID;
      /**
       * <code>required .VL_DATA_FORMAT fovDataFormat = 6;</code>
       */
      public boolean hasFovDataFormat() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required .VL_DATA_FORMAT fovDataFormat = 6;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT getFovDataFormat() {
        return fovDataFormat_;
      }
      /**
       * <code>required .VL_DATA_FORMAT fovDataFormat = 6;</code>
       */
      public Builder setFovDataFormat(com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        fovDataFormat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .VL_DATA_FORMAT fovDataFormat = 6;</code>
       */
      public Builder clearFovDataFormat() {
        bitField0_ = (bitField0_ & ~0x00000020);
        fovDataFormat_ = com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT.VL_DATA_FORMAT_INVALID;
        onChanged();
        return this;
      }

      private com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT vlDataFormat_ = com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT.VL_DATA_FORMAT_INVALID;
      /**
       * <code>required .VL_DATA_FORMAT vlDataFormat = 7;</code>
       */
      public boolean hasVlDataFormat() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required .VL_DATA_FORMAT vlDataFormat = 7;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT getVlDataFormat() {
        return vlDataFormat_;
      }
      /**
       * <code>required .VL_DATA_FORMAT vlDataFormat = 7;</code>
       */
      public Builder setVlDataFormat(com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        vlDataFormat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .VL_DATA_FORMAT vlDataFormat = 7;</code>
       */
      public Builder clearVlDataFormat() {
        bitField0_ = (bitField0_ & ~0x00000040);
        vlDataFormat_ = com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.VL_DATA_FORMAT.VL_DATA_FORMAT_INVALID;
        onChanged();
        return this;
      }

      private com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.DATA_ORIENT vlOrientation_ = com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.DATA_ORIENT.DATA_ORIENT_NO_CHANGE;
      /**
       * <code>optional .DATA_ORIENT vlOrientation = 8;</code>
       */
      public boolean hasVlOrientation() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .DATA_ORIENT vlOrientation = 8;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.DATA_ORIENT getVlOrientation() {
        return vlOrientation_;
      }
      /**
       * <code>optional .DATA_ORIENT vlOrientation = 8;</code>
       */
      public Builder setVlOrientation(com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.DATA_ORIENT value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        vlOrientation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DATA_ORIENT vlOrientation = 8;</code>
       */
      public Builder clearVlOrientation() {
        bitField0_ = (bitField0_ & ~0x00000080);
        vlOrientation_ = com.aolais.electroraven.is2viewerbeta.protos.VlImageMetadataVGPB.DATA_ORIENT.DATA_ORIENT_NO_CHANGE;
        onChanged();
        return this;
      }

      private int pipModeAreaWidth_ ;
      /**
       * <code>required int32 pipModeAreaWidth = 9;</code>
       */
      public boolean hasPipModeAreaWidth() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 pipModeAreaWidth = 9;</code>
       */
      public int getPipModeAreaWidth() {
        return pipModeAreaWidth_;
      }
      /**
       * <code>required int32 pipModeAreaWidth = 9;</code>
       */
      public Builder setPipModeAreaWidth(int value) {
        bitField0_ |= 0x00000100;
        pipModeAreaWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pipModeAreaWidth = 9;</code>
       */
      public Builder clearPipModeAreaWidth() {
        bitField0_ = (bitField0_ & ~0x00000100);
        pipModeAreaWidth_ = 0;
        onChanged();
        return this;
      }

      private int pipModeAreaHeight_ ;
      /**
       * <code>required int32 pipModeAreaHeight = 10;</code>
       */
      public boolean hasPipModeAreaHeight() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int32 pipModeAreaHeight = 10;</code>
       */
      public int getPipModeAreaHeight() {
        return pipModeAreaHeight_;
      }
      /**
       * <code>required int32 pipModeAreaHeight = 10;</code>
       */
      public Builder setPipModeAreaHeight(int value) {
        bitField0_ |= 0x00000200;
        pipModeAreaHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pipModeAreaHeight = 10;</code>
       */
      public Builder clearPipModeAreaHeight() {
        bitField0_ = (bitField0_ & ~0x00000200);
        pipModeAreaHeight_ = 0;
        onChanged();
        return this;
      }

      private int pipModeFOVWindowX_ ;
      /**
       * <code>required int32 pipModeFOVWindowX = 11;</code>
       */
      public boolean hasPipModeFOVWindowX() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 pipModeFOVWindowX = 11;</code>
       */
      public int getPipModeFOVWindowX() {
        return pipModeFOVWindowX_;
      }
      /**
       * <code>required int32 pipModeFOVWindowX = 11;</code>
       */
      public Builder setPipModeFOVWindowX(int value) {
        bitField0_ |= 0x00000400;
        pipModeFOVWindowX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pipModeFOVWindowX = 11;</code>
       */
      public Builder clearPipModeFOVWindowX() {
        bitField0_ = (bitField0_ & ~0x00000400);
        pipModeFOVWindowX_ = 0;
        onChanged();
        return this;
      }

      private int pipModeFOVWindowY_ ;
      /**
       * <code>required int32 pipModeFOVWindowY = 12;</code>
       */
      public boolean hasPipModeFOVWindowY() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 pipModeFOVWindowY = 12;</code>
       */
      public int getPipModeFOVWindowY() {
        return pipModeFOVWindowY_;
      }
      /**
       * <code>required int32 pipModeFOVWindowY = 12;</code>
       */
      public Builder setPipModeFOVWindowY(int value) {
        bitField0_ |= 0x00000800;
        pipModeFOVWindowY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pipModeFOVWindowY = 12;</code>
       */
      public Builder clearPipModeFOVWindowY() {
        bitField0_ = (bitField0_ & ~0x00000800);
        pipModeFOVWindowY_ = 0;
        onChanged();
        return this;
      }

      private int pipModeFOVWindowWidth_ ;
      /**
       * <code>required int32 pipModeFOVWindowWidth = 13;</code>
       */
      public boolean hasPipModeFOVWindowWidth() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required int32 pipModeFOVWindowWidth = 13;</code>
       */
      public int getPipModeFOVWindowWidth() {
        return pipModeFOVWindowWidth_;
      }
      /**
       * <code>required int32 pipModeFOVWindowWidth = 13;</code>
       */
      public Builder setPipModeFOVWindowWidth(int value) {
        bitField0_ |= 0x00001000;
        pipModeFOVWindowWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pipModeFOVWindowWidth = 13;</code>
       */
      public Builder clearPipModeFOVWindowWidth() {
        bitField0_ = (bitField0_ & ~0x00001000);
        pipModeFOVWindowWidth_ = 0;
        onChanged();
        return this;
      }

      private int pipModeFOVWindowHeight_ ;
      /**
       * <code>required int32 pipModeFOVWindowHeight = 14;</code>
       */
      public boolean hasPipModeFOVWindowHeight() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required int32 pipModeFOVWindowHeight = 14;</code>
       */
      public int getPipModeFOVWindowHeight() {
        return pipModeFOVWindowHeight_;
      }
      /**
       * <code>required int32 pipModeFOVWindowHeight = 14;</code>
       */
      public Builder setPipModeFOVWindowHeight(int value) {
        bitField0_ |= 0x00002000;
        pipModeFOVWindowHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 pipModeFOVWindowHeight = 14;</code>
       */
      public Builder clearPipModeFOVWindowHeight() {
        bitField0_ = (bitField0_ & ~0x00002000);
        pipModeFOVWindowHeight_ = 0;
        onChanged();
        return this;
      }

      private int fsModeFOVWindowX_ ;
      /**
       * <code>required int32 fsModeFOVWindowX = 15;</code>
       */
      public boolean hasFsModeFOVWindowX() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required int32 fsModeFOVWindowX = 15;</code>
       */
      public int getFsModeFOVWindowX() {
        return fsModeFOVWindowX_;
      }
      /**
       * <code>required int32 fsModeFOVWindowX = 15;</code>
       */
      public Builder setFsModeFOVWindowX(int value) {
        bitField0_ |= 0x00004000;
        fsModeFOVWindowX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 fsModeFOVWindowX = 15;</code>
       */
      public Builder clearFsModeFOVWindowX() {
        bitField0_ = (bitField0_ & ~0x00004000);
        fsModeFOVWindowX_ = 0;
        onChanged();
        return this;
      }

      private int fsModeFOVWindowY_ ;
      /**
       * <code>required int32 fsModeFOVWindowY = 16;</code>
       */
      public boolean hasFsModeFOVWindowY() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required int32 fsModeFOVWindowY = 16;</code>
       */
      public int getFsModeFOVWindowY() {
        return fsModeFOVWindowY_;
      }
      /**
       * <code>required int32 fsModeFOVWindowY = 16;</code>
       */
      public Builder setFsModeFOVWindowY(int value) {
        bitField0_ |= 0x00008000;
        fsModeFOVWindowY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 fsModeFOVWindowY = 16;</code>
       */
      public Builder clearFsModeFOVWindowY() {
        bitField0_ = (bitField0_ & ~0x00008000);
        fsModeFOVWindowY_ = 0;
        onChanged();
        return this;
      }

      private int fsModeFOVWindowWidth_ ;
      /**
       * <code>required int32 fsModeFOVWindowWidth = 17;</code>
       */
      public boolean hasFsModeFOVWindowWidth() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>required int32 fsModeFOVWindowWidth = 17;</code>
       */
      public int getFsModeFOVWindowWidth() {
        return fsModeFOVWindowWidth_;
      }
      /**
       * <code>required int32 fsModeFOVWindowWidth = 17;</code>
       */
      public Builder setFsModeFOVWindowWidth(int value) {
        bitField0_ |= 0x00010000;
        fsModeFOVWindowWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 fsModeFOVWindowWidth = 17;</code>
       */
      public Builder clearFsModeFOVWindowWidth() {
        bitField0_ = (bitField0_ & ~0x00010000);
        fsModeFOVWindowWidth_ = 0;
        onChanged();
        return this;
      }

      private int fsModeFOVWindowHeight_ ;
      /**
       * <code>required int32 fsModeFOVWindowHeight = 18;</code>
       */
      public boolean hasFsModeFOVWindowHeight() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>required int32 fsModeFOVWindowHeight = 18;</code>
       */
      public int getFsModeFOVWindowHeight() {
        return fsModeFOVWindowHeight_;
      }
      /**
       * <code>required int32 fsModeFOVWindowHeight = 18;</code>
       */
      public Builder setFsModeFOVWindowHeight(int value) {
        bitField0_ |= 0x00020000;
        fsModeFOVWindowHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 fsModeFOVWindowHeight = 18;</code>
       */
      public Builder clearFsModeFOVWindowHeight() {
        bitField0_ = (bitField0_ & ~0x00020000);
        fsModeFOVWindowHeight_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:VL_IMAGE_METADATA_VGPB)
    }

    static {
      defaultInstance = new VL_IMAGE_METADATA_VGPB(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:VL_IMAGE_METADATA_VGPB)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_VL_IMAGE_METADATA_VGPB_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_VL_IMAGE_METADATA_VGPB_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034VL_IMAGE_METADATA_VGPB.proto\"\232\004\n\026VL_IM" +
      "AGE_METADATA_VGPB\022\023\n\013vlDataWidth\030\001 \002(\005\022\024" +
      "\n\014vlDataHeight\030\002 \002(\005\022\025\n\rfovImageWidth\030\003 " +
      "\002(\005\022\026\n\016fovImageHeight\030\004 \002(\005\022\027\n\017fovDataRe" +
      "quired\030\005 \002(\005\022&\n\rfovDataFormat\030\006 \002(\0162\017.VL" +
      "_DATA_FORMAT\022%\n\014vlDataFormat\030\007 \002(\0162\017.VL_" +
      "DATA_FORMAT\022#\n\rvlOrientation\030\010 \001(\0162\014.DAT" +
      "A_ORIENT\022\030\n\020pipModeAreaWidth\030\t \002(\005\022\031\n\021pi" +
      "pModeAreaHeight\030\n \002(\005\022\031\n\021pipModeFOVWindo" +
      "wX\030\013 \002(\005\022\031\n\021pipModeFOVWindowY\030\014 \002(\005\022\035\n\025p",
      "ipModeFOVWindowWidth\030\r \002(\005\022\036\n\026pipModeFOV" +
      "WindowHeight\030\016 \002(\005\022\030\n\020fsModeFOVWindowX\030\017" +
      " \002(\005\022\030\n\020fsModeFOVWindowY\030\020 \002(\005\022\034\n\024fsMode" +
      "FOVWindowWidth\030\021 \002(\005\022\035\n\025fsModeFOVWindowH" +
      "eight\030\022 \002(\005*\215\001\n\016VL_DATA_FORMAT\022\032\n\026VL_DAT" +
      "A_FORMAT_INVALID\020\000\022\"\n\036VL_DATA_FORMAT_TOP" +
      "_DOWN_RGB565\020\001\022\027\n\023VL_DATA_FORMAT_JPEG\020\002\022" +
      "\"\n\036VL_DATA_FORMAT_TOP_DOWN_ARGB32\020\003*\351\002\n\013" +
      "DATA_ORIENT\022\031\n\025DATA_ORIENT_NO_CHANGE\020\000\022\033" +
      "\n\027DATA_ORIENT_ROTATE_90CW\020\001\022\034\n\030DATA_ORIE",
      "NT_ROTATE_90CCW\020\002\022\032\n\026DATA_ORIENT_ROTATE_" +
      "180\020\003\022%\n!DATA_ORIENT_FLIP_VERT_ROTATE_90" +
      "CW\020\004\022&\n\"DATA_ORIENT_FLIP_VERT_ROTATE_90C" +
      "CW\020\005\022$\n DATA_ORIENT_FLIP_VERT_ROTATE_180" +
      "\020\006\022%\n!DATA_ORIENT_FLIP_HORZ_ROTATE_90CW\020" +
      "\007\022&\n\"DATA_ORIENT_FLIP_HORZ_ROTATE_90CCW\020" +
      "\010\022$\n DATA_ORIENT_FLIP_HORZ_ROTATE_180\020\tB" +
      "C\n,com.aolais.electroraven.is2viewerbeta" +
      ".protosB\023VlImageMetadataVGPB"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_VL_IMAGE_METADATA_VGPB_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_VL_IMAGE_METADATA_VGPB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_VL_IMAGE_METADATA_VGPB_descriptor,
        new java.lang.String[] { "VlDataWidth", "VlDataHeight", "FovImageWidth", "FovImageHeight", "FovDataRequired", "FovDataFormat", "VlDataFormat", "VlOrientation", "PipModeAreaWidth", "PipModeAreaHeight", "PipModeFOVWindowX", "PipModeFOVWindowY", "PipModeFOVWindowWidth", "PipModeFOVWindowHeight", "FsModeFOVWindowX", "FsModeFOVWindowY", "FsModeFOVWindowWidth", "FsModeFOVWindowHeight", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
