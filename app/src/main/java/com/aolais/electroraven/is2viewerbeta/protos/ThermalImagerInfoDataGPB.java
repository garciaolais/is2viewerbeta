// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: THERMAL_IMAGER_INFO_DATA_GPB.proto

package com.aolais.electroraven.is2viewerbeta.protos;

public final class ThermalImagerInfoDataGPB {
  private ThermalImagerInfoDataGPB() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code TI_FAMILY}
   */
  public enum TI_FAMILY
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TI_FAMILY_FELXCAM = 0;</code>
     */
    TI_FAMILY_FELXCAM(0, 0),
    /**
     * <code>TI_FAMILY_GLADIATOR = 1;</code>
     */
    TI_FAMILY_GLADIATOR(1, 1),
    /**
     * <code>TI_FAMILY_NEMESIS = 2;</code>
     */
    TI_FAMILY_NEMESIS(2, 2),
    /**
     * <code>TI_FAMILY_ROMULUS = 3;</code>
     */
    TI_FAMILY_ROMULUS(3, 3),
    /**
     * <code>TI_FAMILY_IRISYS = 4;</code>
     */
    TI_FAMILY_IRISYS(4, 4),
    /**
     * <code>TI_FAMILY_GEMINI = 5;</code>
     */
    TI_FAMILY_GEMINI(5, 5),
    ;

    /**
     * <code>TI_FAMILY_FELXCAM = 0;</code>
     */
    public static final int TI_FAMILY_FELXCAM_VALUE = 0;
    /**
     * <code>TI_FAMILY_GLADIATOR = 1;</code>
     */
    public static final int TI_FAMILY_GLADIATOR_VALUE = 1;
    /**
     * <code>TI_FAMILY_NEMESIS = 2;</code>
     */
    public static final int TI_FAMILY_NEMESIS_VALUE = 2;
    /**
     * <code>TI_FAMILY_ROMULUS = 3;</code>
     */
    public static final int TI_FAMILY_ROMULUS_VALUE = 3;
    /**
     * <code>TI_FAMILY_IRISYS = 4;</code>
     */
    public static final int TI_FAMILY_IRISYS_VALUE = 4;
    /**
     * <code>TI_FAMILY_GEMINI = 5;</code>
     */
    public static final int TI_FAMILY_GEMINI_VALUE = 5;


    public final int getNumber() { return value; }

    public static TI_FAMILY valueOf(int value) {
      switch (value) {
        case 0: return TI_FAMILY_FELXCAM;
        case 1: return TI_FAMILY_GLADIATOR;
        case 2: return TI_FAMILY_NEMESIS;
        case 3: return TI_FAMILY_ROMULUS;
        case 4: return TI_FAMILY_IRISYS;
        case 5: return TI_FAMILY_GEMINI;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TI_FAMILY>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<TI_FAMILY>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TI_FAMILY>() {
            public TI_FAMILY findValueByNumber(int number) {
              return TI_FAMILY.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.getDescriptor().getEnumTypes().get(0);
    }

    private static final TI_FAMILY[] VALUES = values();

    public static TI_FAMILY valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private TI_FAMILY(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:TI_FAMILY)
  }

  /**
   * Protobuf enum {@code ENCODING_ENDIANNESS}
   */
  public enum ENCODING_ENDIANNESS
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>T_ENCODING_ENDIANNESS_THERMAL_IMAGER = -1;</code>
     */
    T_ENCODING_ENDIANNESS_THERMAL_IMAGER(0, -1),
    /**
     * <code>T_ENCODING_LITTLE_ENDIAN = 0;</code>
     */
    T_ENCODING_LITTLE_ENDIAN(1, 0),
    /**
     * <code>T_ENCODING_BIG_ENDIAN = 1;</code>
     */
    T_ENCODING_BIG_ENDIAN(2, 1),
    ;

    /**
     * <code>T_ENCODING_ENDIANNESS_THERMAL_IMAGER = -1;</code>
     */
    public static final int T_ENCODING_ENDIANNESS_THERMAL_IMAGER_VALUE = -1;
    /**
     * <code>T_ENCODING_LITTLE_ENDIAN = 0;</code>
     */
    public static final int T_ENCODING_LITTLE_ENDIAN_VALUE = 0;
    /**
     * <code>T_ENCODING_BIG_ENDIAN = 1;</code>
     */
    public static final int T_ENCODING_BIG_ENDIAN_VALUE = 1;


    public final int getNumber() { return value; }

    public static ENCODING_ENDIANNESS valueOf(int value) {
      switch (value) {
        case -1: return T_ENCODING_ENDIANNESS_THERMAL_IMAGER;
        case 0: return T_ENCODING_LITTLE_ENDIAN;
        case 1: return T_ENCODING_BIG_ENDIAN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ENCODING_ENDIANNESS>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ENCODING_ENDIANNESS>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ENCODING_ENDIANNESS>() {
            public ENCODING_ENDIANNESS findValueByNumber(int number) {
              return ENCODING_ENDIANNESS.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.getDescriptor().getEnumTypes().get(1);
    }

    private static final ENCODING_ENDIANNESS[] VALUES = values();

    public static ENCODING_ENDIANNESS valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ENCODING_ENDIANNESS(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ENCODING_ENDIANNESS)
  }

  /**
   * Protobuf enum {@code THUMBNAIL_DATA_FORMAT}
   */
  public enum THUMBNAIL_DATA_FORMAT
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>THUMBNAIL_DATA_FORMAT_INVALID = 0;</code>
     */
    THUMBNAIL_DATA_FORMAT_INVALID(0, 0),
    /**
     * <code>THUMBNAIL_DATA_FORMAT_TOP_DOWN_RGB565 = 1;</code>
     */
    THUMBNAIL_DATA_FORMAT_TOP_DOWN_RGB565(1, 1),
    /**
     * <code>THUMBNAIL_DATA_FORMAT_JPEG = 2;</code>
     */
    THUMBNAIL_DATA_FORMAT_JPEG(2, 2),
    /**
     * <code>THUMBNAIL_DATA_FORMAT_YUV422 = 3;</code>
     */
    THUMBNAIL_DATA_FORMAT_YUV422(3, 3),
    ;

    /**
     * <code>THUMBNAIL_DATA_FORMAT_INVALID = 0;</code>
     */
    public static final int THUMBNAIL_DATA_FORMAT_INVALID_VALUE = 0;
    /**
     * <code>THUMBNAIL_DATA_FORMAT_TOP_DOWN_RGB565 = 1;</code>
     */
    public static final int THUMBNAIL_DATA_FORMAT_TOP_DOWN_RGB565_VALUE = 1;
    /**
     * <code>THUMBNAIL_DATA_FORMAT_JPEG = 2;</code>
     */
    public static final int THUMBNAIL_DATA_FORMAT_JPEG_VALUE = 2;
    /**
     * <code>THUMBNAIL_DATA_FORMAT_YUV422 = 3;</code>
     */
    public static final int THUMBNAIL_DATA_FORMAT_YUV422_VALUE = 3;


    public final int getNumber() { return value; }

    public static THUMBNAIL_DATA_FORMAT valueOf(int value) {
      switch (value) {
        case 0: return THUMBNAIL_DATA_FORMAT_INVALID;
        case 1: return THUMBNAIL_DATA_FORMAT_TOP_DOWN_RGB565;
        case 2: return THUMBNAIL_DATA_FORMAT_JPEG;
        case 3: return THUMBNAIL_DATA_FORMAT_YUV422;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<THUMBNAIL_DATA_FORMAT>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<THUMBNAIL_DATA_FORMAT>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<THUMBNAIL_DATA_FORMAT>() {
            public THUMBNAIL_DATA_FORMAT findValueByNumber(int number) {
              return THUMBNAIL_DATA_FORMAT.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.getDescriptor().getEnumTypes().get(2);
    }

    private static final THUMBNAIL_DATA_FORMAT[] VALUES = values();

    public static THUMBNAIL_DATA_FORMAT valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private THUMBNAIL_DATA_FORMAT(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:THUMBNAIL_DATA_FORMAT)
  }

  public interface THERMAL_IMAGER_INFO_DATA_GPBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:THERMAL_IMAGER_INFO_DATA_GPB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .TI_FAMILY cameraFamily = 1;</code>
     */
    boolean hasCameraFamily();
    /**
     * <code>required .TI_FAMILY cameraFamily = 1;</code>
     */
    com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.TI_FAMILY getCameraFamily();

    /**
     * <code>required int32 cameraModelNumber = 2;</code>
     */
    boolean hasCameraModelNumber();
    /**
     * <code>required int32 cameraModelNumber = 2;</code>
     */
    int getCameraModelNumber();

    /**
     * <code>required int32 cameraCapabilityFlags = 3;</code>
     */
    boolean hasCameraCapabilityFlags();
    /**
     * <code>required int32 cameraCapabilityFlags = 3;</code>
     */
    int getCameraCapabilityFlags();

    /**
     * <code>required int32 endUserPresentationWidth = 4;</code>
     */
    boolean hasEndUserPresentationWidth();
    /**
     * <code>required int32 endUserPresentationWidth = 4;</code>
     */
    int getEndUserPresentationWidth();

    /**
     * <code>required int32 endUserPresentationHeight = 5;</code>
     */
    boolean hasEndUserPresentationHeight();
    /**
     * <code>required int32 endUserPresentationHeight = 5;</code>
     */
    int getEndUserPresentationHeight();

    /**
     * <code>required .ENCODING_ENDIANNESS thermalImagerEndianness = 6;</code>
     */
    boolean hasThermalImagerEndianness();
    /**
     * <code>required .ENCODING_ENDIANNESS thermalImagerEndianness = 6;</code>
     */
    com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.ENCODING_ENDIANNESS getThermalImagerEndianness();

    /**
     * <code>required int32 thermalImagerThumbnailWidth = 7;</code>
     */
    boolean hasThermalImagerThumbnailWidth();
    /**
     * <code>required int32 thermalImagerThumbnailWidth = 7;</code>
     */
    int getThermalImagerThumbnailWidth();

    /**
     * <code>required int32 thermalImagerThumbnailHeight = 8;</code>
     */
    boolean hasThermalImagerThumbnailHeight();
    /**
     * <code>required int32 thermalImagerThumbnailHeight = 8;</code>
     */
    int getThermalImagerThumbnailHeight();

    /**
     * <code>required .THUMBNAIL_DATA_FORMAT thermalImagerThumbnailFormat = 9;</code>
     */
    boolean hasThermalImagerThumbnailFormat();
    /**
     * <code>required .THUMBNAIL_DATA_FORMAT thermalImagerThumbnailFormat = 9;</code>
     */
    com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THUMBNAIL_DATA_FORMAT getThermalImagerThumbnailFormat();

    /**
     * <code>required int32 irSensorWidth = 10;</code>
     */
    boolean hasIrSensorWidth();
    /**
     * <code>required int32 irSensorWidth = 10;</code>
     */
    int getIrSensorWidth();

    /**
     * <code>required int32 irSensorHeight = 11;</code>
     */
    boolean hasIrSensorHeight();
    /**
     * <code>required int32 irSensorHeight = 11;</code>
     */
    int getIrSensorHeight();

    /**
     * <code>required int32 vlSensorWidth = 12;</code>
     */
    boolean hasVlSensorWidth();
    /**
     * <code>required int32 vlSensorWidth = 12;</code>
     */
    int getVlSensorWidth();

    /**
     * <code>required int32 vlSensorHeight = 13;</code>
     */
    boolean hasVlSensorHeight();
    /**
     * <code>required int32 vlSensorHeight = 13;</code>
     */
    int getVlSensorHeight();

    /**
     * <code>required int32 minimumCenterBoxWidth = 14;</code>
     */
    boolean hasMinimumCenterBoxWidth();
    /**
     * <code>required int32 minimumCenterBoxWidth = 14;</code>
     */
    int getMinimumCenterBoxWidth();

    /**
     * <code>required int32 minimumCenterBoxHeight = 15;</code>
     */
    boolean hasMinimumCenterBoxHeight();
    /**
     * <code>required int32 minimumCenterBoxHeight = 15;</code>
     */
    int getMinimumCenterBoxHeight();

    /**
     * <code>required int32 maximumCenterBoxWidth = 16;</code>
     */
    boolean hasMaximumCenterBoxWidth();
    /**
     * <code>required int32 maximumCenterBoxWidth = 16;</code>
     */
    int getMaximumCenterBoxWidth();

    /**
     * <code>required int32 maximumCenterBoxHeight = 17;</code>
     */
    boolean hasMaximumCenterBoxHeight();
    /**
     * <code>required int32 maximumCenterBoxHeight = 17;</code>
     */
    int getMaximumCenterBoxHeight();

    /**
     * <code>required int32 centerPointPixelIndex = 18;</code>
     */
    boolean hasCenterPointPixelIndex();
    /**
     * <code>required int32 centerPointPixelIndex = 18;</code>
     */
    int getCenterPointPixelIndex();

    /**
     * <code>required int32 numCenterPointPixels = 19;</code>
     */
    boolean hasNumCenterPointPixels();
    /**
     * <code>required int32 numCenterPointPixels = 19;</code>
     */
    int getNumCenterPointPixels();

    /**
     * <code>required .CALIBRATION_DATE cameraCalibrationDate = 20;</code>
     */
    boolean hasCameraCalibrationDate();
    /**
     * <code>required .CALIBRATION_DATE cameraCalibrationDate = 20;</code>
     */
    com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE getCameraCalibrationDate();
    /**
     * <code>required .CALIBRATION_DATE cameraCalibrationDate = 20;</code>
     */
    com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATEOrBuilder getCameraCalibrationDateOrBuilder();

    /**
     * <code>required .VERSION_DATA_VGPB softwareVersion = 21;</code>
     */
    boolean hasSoftwareVersion();
    /**
     * <code>required .VERSION_DATA_VGPB softwareVersion = 21;</code>
     */
    com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB getSoftwareVersion();
    /**
     * <code>required .VERSION_DATA_VGPB softwareVersion = 21;</code>
     */
    com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPBOrBuilder getSoftwareVersionOrBuilder();

    /**
     * <code>required string companyName32Chars = 22;</code>
     */
    boolean hasCompanyName32Chars();
    /**
     * <code>required string companyName32Chars = 22;</code>
     */
    java.lang.String getCompanyName32Chars();
    /**
     * <code>required string companyName32Chars = 22;</code>
     */
    com.google.protobuf.ByteString
        getCompanyName32CharsBytes();

    /**
     * <code>required string cameraSerialNumber32Chars = 23;</code>
     */
    boolean hasCameraSerialNumber32Chars();
    /**
     * <code>required string cameraSerialNumber32Chars = 23;</code>
     */
    java.lang.String getCameraSerialNumber32Chars();
    /**
     * <code>required string cameraSerialNumber32Chars = 23;</code>
     */
    com.google.protobuf.ByteString
        getCameraSerialNumber32CharsBytes();

    /**
     * <code>required string irEngineSerialNumber32Chars = 24;</code>
     */
    boolean hasIrEngineSerialNumber32Chars();
    /**
     * <code>required string irEngineSerialNumber32Chars = 24;</code>
     */
    java.lang.String getIrEngineSerialNumber32Chars();
    /**
     * <code>required string irEngineSerialNumber32Chars = 24;</code>
     */
    com.google.protobuf.ByteString
        getIrEngineSerialNumber32CharsBytes();

    /**
     * <code>required .AUDIO_CAPABILITY_DATA_VGPB cameraAudioCapability = 25;</code>
     */
    boolean hasCameraAudioCapability();
    /**
     * <code>required .AUDIO_CAPABILITY_DATA_VGPB cameraAudioCapability = 25;</code>
     */
    com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB getCameraAudioCapability();
    /**
     * <code>required .AUDIO_CAPABILITY_DATA_VGPB cameraAudioCapability = 25;</code>
     */
    com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPBOrBuilder getCameraAudioCapabilityOrBuilder();
  }
  /**
   * Protobuf type {@code THERMAL_IMAGER_INFO_DATA_GPB}
   */
  public static final class THERMAL_IMAGER_INFO_DATA_GPB extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:THERMAL_IMAGER_INFO_DATA_GPB)
      THERMAL_IMAGER_INFO_DATA_GPBOrBuilder {
    // Use THERMAL_IMAGER_INFO_DATA_GPB.newBuilder() to construct.
    private THERMAL_IMAGER_INFO_DATA_GPB(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private THERMAL_IMAGER_INFO_DATA_GPB(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final THERMAL_IMAGER_INFO_DATA_GPB defaultInstance;
    public static THERMAL_IMAGER_INFO_DATA_GPB getDefaultInstance() {
      return defaultInstance;
    }

    public THERMAL_IMAGER_INFO_DATA_GPB getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private THERMAL_IMAGER_INFO_DATA_GPB(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.TI_FAMILY value = com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.TI_FAMILY.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                cameraFamily_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              cameraModelNumber_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              cameraCapabilityFlags_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              endUserPresentationWidth_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              endUserPresentationHeight_ = input.readInt32();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.ENCODING_ENDIANNESS value = com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.ENCODING_ENDIANNESS.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                thermalImagerEndianness_ = value;
              }
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              thermalImagerThumbnailWidth_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              thermalImagerThumbnailHeight_ = input.readInt32();
              break;
            }
            case 72: {
              int rawValue = input.readEnum();
              com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THUMBNAIL_DATA_FORMAT value = com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THUMBNAIL_DATA_FORMAT.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(9, rawValue);
              } else {
                bitField0_ |= 0x00000100;
                thermalImagerThumbnailFormat_ = value;
              }
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              irSensorWidth_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              irSensorHeight_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              vlSensorWidth_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              vlSensorHeight_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              minimumCenterBoxWidth_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              minimumCenterBoxHeight_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              maximumCenterBoxWidth_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              maximumCenterBoxHeight_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              centerPointPixelIndex_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              numCenterPointPixels_ = input.readInt32();
              break;
            }
            case 162: {
              com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE.Builder subBuilder = null;
              if (((bitField0_ & 0x00080000) == 0x00080000)) {
                subBuilder = cameraCalibrationDate_.toBuilder();
              }
              cameraCalibrationDate_ = input.readMessage(com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cameraCalibrationDate_);
                cameraCalibrationDate_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00080000;
              break;
            }
            case 170: {
              com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB.Builder subBuilder = null;
              if (((bitField0_ & 0x00100000) == 0x00100000)) {
                subBuilder = softwareVersion_.toBuilder();
              }
              softwareVersion_ = input.readMessage(com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(softwareVersion_);
                softwareVersion_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00100000;
              break;
            }
            case 178: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00200000;
              companyName32Chars_ = bs;
              break;
            }
            case 186: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00400000;
              cameraSerialNumber32Chars_ = bs;
              break;
            }
            case 194: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00800000;
              irEngineSerialNumber32Chars_ = bs;
              break;
            }
            case 202: {
              com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB.Builder subBuilder = null;
              if (((bitField0_ & 0x01000000) == 0x01000000)) {
                subBuilder = cameraAudioCapability_.toBuilder();
              }
              cameraAudioCapability_ = input.readMessage(com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cameraAudioCapability_);
                cameraAudioCapability_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x01000000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.internal_static_THERMAL_IMAGER_INFO_DATA_GPB_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.internal_static_THERMAL_IMAGER_INFO_DATA_GPB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB.class, com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB.Builder.class);
    }

    public static com.google.protobuf.Parser<THERMAL_IMAGER_INFO_DATA_GPB> PARSER =
        new com.google.protobuf.AbstractParser<THERMAL_IMAGER_INFO_DATA_GPB>() {
      public THERMAL_IMAGER_INFO_DATA_GPB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new THERMAL_IMAGER_INFO_DATA_GPB(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<THERMAL_IMAGER_INFO_DATA_GPB> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CAMERAFAMILY_FIELD_NUMBER = 1;
    private com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.TI_FAMILY cameraFamily_;
    /**
     * <code>required .TI_FAMILY cameraFamily = 1;</code>
     */
    public boolean hasCameraFamily() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .TI_FAMILY cameraFamily = 1;</code>
     */
    public com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.TI_FAMILY getCameraFamily() {
      return cameraFamily_;
    }

    public static final int CAMERAMODELNUMBER_FIELD_NUMBER = 2;
    private int cameraModelNumber_;
    /**
     * <code>required int32 cameraModelNumber = 2;</code>
     */
    public boolean hasCameraModelNumber() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 cameraModelNumber = 2;</code>
     */
    public int getCameraModelNumber() {
      return cameraModelNumber_;
    }

    public static final int CAMERACAPABILITYFLAGS_FIELD_NUMBER = 3;
    private int cameraCapabilityFlags_;
    /**
     * <code>required int32 cameraCapabilityFlags = 3;</code>
     */
    public boolean hasCameraCapabilityFlags() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 cameraCapabilityFlags = 3;</code>
     */
    public int getCameraCapabilityFlags() {
      return cameraCapabilityFlags_;
    }

    public static final int ENDUSERPRESENTATIONWIDTH_FIELD_NUMBER = 4;
    private int endUserPresentationWidth_;
    /**
     * <code>required int32 endUserPresentationWidth = 4;</code>
     */
    public boolean hasEndUserPresentationWidth() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 endUserPresentationWidth = 4;</code>
     */
    public int getEndUserPresentationWidth() {
      return endUserPresentationWidth_;
    }

    public static final int ENDUSERPRESENTATIONHEIGHT_FIELD_NUMBER = 5;
    private int endUserPresentationHeight_;
    /**
     * <code>required int32 endUserPresentationHeight = 5;</code>
     */
    public boolean hasEndUserPresentationHeight() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 endUserPresentationHeight = 5;</code>
     */
    public int getEndUserPresentationHeight() {
      return endUserPresentationHeight_;
    }

    public static final int THERMALIMAGERENDIANNESS_FIELD_NUMBER = 6;
    private com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.ENCODING_ENDIANNESS thermalImagerEndianness_;
    /**
     * <code>required .ENCODING_ENDIANNESS thermalImagerEndianness = 6;</code>
     */
    public boolean hasThermalImagerEndianness() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required .ENCODING_ENDIANNESS thermalImagerEndianness = 6;</code>
     */
    public com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.ENCODING_ENDIANNESS getThermalImagerEndianness() {
      return thermalImagerEndianness_;
    }

    public static final int THERMALIMAGERTHUMBNAILWIDTH_FIELD_NUMBER = 7;
    private int thermalImagerThumbnailWidth_;
    /**
     * <code>required int32 thermalImagerThumbnailWidth = 7;</code>
     */
    public boolean hasThermalImagerThumbnailWidth() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 thermalImagerThumbnailWidth = 7;</code>
     */
    public int getThermalImagerThumbnailWidth() {
      return thermalImagerThumbnailWidth_;
    }

    public static final int THERMALIMAGERTHUMBNAILHEIGHT_FIELD_NUMBER = 8;
    private int thermalImagerThumbnailHeight_;
    /**
     * <code>required int32 thermalImagerThumbnailHeight = 8;</code>
     */
    public boolean hasThermalImagerThumbnailHeight() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 thermalImagerThumbnailHeight = 8;</code>
     */
    public int getThermalImagerThumbnailHeight() {
      return thermalImagerThumbnailHeight_;
    }

    public static final int THERMALIMAGERTHUMBNAILFORMAT_FIELD_NUMBER = 9;
    private com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THUMBNAIL_DATA_FORMAT thermalImagerThumbnailFormat_;
    /**
     * <code>required .THUMBNAIL_DATA_FORMAT thermalImagerThumbnailFormat = 9;</code>
     */
    public boolean hasThermalImagerThumbnailFormat() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required .THUMBNAIL_DATA_FORMAT thermalImagerThumbnailFormat = 9;</code>
     */
    public com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THUMBNAIL_DATA_FORMAT getThermalImagerThumbnailFormat() {
      return thermalImagerThumbnailFormat_;
    }

    public static final int IRSENSORWIDTH_FIELD_NUMBER = 10;
    private int irSensorWidth_;
    /**
     * <code>required int32 irSensorWidth = 10;</code>
     */
    public boolean hasIrSensorWidth() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required int32 irSensorWidth = 10;</code>
     */
    public int getIrSensorWidth() {
      return irSensorWidth_;
    }

    public static final int IRSENSORHEIGHT_FIELD_NUMBER = 11;
    private int irSensorHeight_;
    /**
     * <code>required int32 irSensorHeight = 11;</code>
     */
    public boolean hasIrSensorHeight() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required int32 irSensorHeight = 11;</code>
     */
    public int getIrSensorHeight() {
      return irSensorHeight_;
    }

    public static final int VLSENSORWIDTH_FIELD_NUMBER = 12;
    private int vlSensorWidth_;
    /**
     * <code>required int32 vlSensorWidth = 12;</code>
     */
    public boolean hasVlSensorWidth() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required int32 vlSensorWidth = 12;</code>
     */
    public int getVlSensorWidth() {
      return vlSensorWidth_;
    }

    public static final int VLSENSORHEIGHT_FIELD_NUMBER = 13;
    private int vlSensorHeight_;
    /**
     * <code>required int32 vlSensorHeight = 13;</code>
     */
    public boolean hasVlSensorHeight() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required int32 vlSensorHeight = 13;</code>
     */
    public int getVlSensorHeight() {
      return vlSensorHeight_;
    }

    public static final int MINIMUMCENTERBOXWIDTH_FIELD_NUMBER = 14;
    private int minimumCenterBoxWidth_;
    /**
     * <code>required int32 minimumCenterBoxWidth = 14;</code>
     */
    public boolean hasMinimumCenterBoxWidth() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required int32 minimumCenterBoxWidth = 14;</code>
     */
    public int getMinimumCenterBoxWidth() {
      return minimumCenterBoxWidth_;
    }

    public static final int MINIMUMCENTERBOXHEIGHT_FIELD_NUMBER = 15;
    private int minimumCenterBoxHeight_;
    /**
     * <code>required int32 minimumCenterBoxHeight = 15;</code>
     */
    public boolean hasMinimumCenterBoxHeight() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>required int32 minimumCenterBoxHeight = 15;</code>
     */
    public int getMinimumCenterBoxHeight() {
      return minimumCenterBoxHeight_;
    }

    public static final int MAXIMUMCENTERBOXWIDTH_FIELD_NUMBER = 16;
    private int maximumCenterBoxWidth_;
    /**
     * <code>required int32 maximumCenterBoxWidth = 16;</code>
     */
    public boolean hasMaximumCenterBoxWidth() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>required int32 maximumCenterBoxWidth = 16;</code>
     */
    public int getMaximumCenterBoxWidth() {
      return maximumCenterBoxWidth_;
    }

    public static final int MAXIMUMCENTERBOXHEIGHT_FIELD_NUMBER = 17;
    private int maximumCenterBoxHeight_;
    /**
     * <code>required int32 maximumCenterBoxHeight = 17;</code>
     */
    public boolean hasMaximumCenterBoxHeight() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>required int32 maximumCenterBoxHeight = 17;</code>
     */
    public int getMaximumCenterBoxHeight() {
      return maximumCenterBoxHeight_;
    }

    public static final int CENTERPOINTPIXELINDEX_FIELD_NUMBER = 18;
    private int centerPointPixelIndex_;
    /**
     * <code>required int32 centerPointPixelIndex = 18;</code>
     */
    public boolean hasCenterPointPixelIndex() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>required int32 centerPointPixelIndex = 18;</code>
     */
    public int getCenterPointPixelIndex() {
      return centerPointPixelIndex_;
    }

    public static final int NUMCENTERPOINTPIXELS_FIELD_NUMBER = 19;
    private int numCenterPointPixels_;
    /**
     * <code>required int32 numCenterPointPixels = 19;</code>
     */
    public boolean hasNumCenterPointPixels() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>required int32 numCenterPointPixels = 19;</code>
     */
    public int getNumCenterPointPixels() {
      return numCenterPointPixels_;
    }

    public static final int CAMERACALIBRATIONDATE_FIELD_NUMBER = 20;
    private com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE cameraCalibrationDate_;
    /**
     * <code>required .CALIBRATION_DATE cameraCalibrationDate = 20;</code>
     */
    public boolean hasCameraCalibrationDate() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>required .CALIBRATION_DATE cameraCalibrationDate = 20;</code>
     */
    public com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE getCameraCalibrationDate() {
      return cameraCalibrationDate_;
    }
    /**
     * <code>required .CALIBRATION_DATE cameraCalibrationDate = 20;</code>
     */
    public com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATEOrBuilder getCameraCalibrationDateOrBuilder() {
      return cameraCalibrationDate_;
    }

    public static final int SOFTWAREVERSION_FIELD_NUMBER = 21;
    private com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB softwareVersion_;
    /**
     * <code>required .VERSION_DATA_VGPB softwareVersion = 21;</code>
     */
    public boolean hasSoftwareVersion() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>required .VERSION_DATA_VGPB softwareVersion = 21;</code>
     */
    public com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB getSoftwareVersion() {
      return softwareVersion_;
    }
    /**
     * <code>required .VERSION_DATA_VGPB softwareVersion = 21;</code>
     */
    public com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPBOrBuilder getSoftwareVersionOrBuilder() {
      return softwareVersion_;
    }

    public static final int COMPANYNAME32CHARS_FIELD_NUMBER = 22;
    private java.lang.Object companyName32Chars_;
    /**
     * <code>required string companyName32Chars = 22;</code>
     */
    public boolean hasCompanyName32Chars() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>required string companyName32Chars = 22;</code>
     */
    public java.lang.String getCompanyName32Chars() {
      java.lang.Object ref = companyName32Chars_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          companyName32Chars_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string companyName32Chars = 22;</code>
     */
    public com.google.protobuf.ByteString
        getCompanyName32CharsBytes() {
      java.lang.Object ref = companyName32Chars_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        companyName32Chars_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CAMERASERIALNUMBER32CHARS_FIELD_NUMBER = 23;
    private java.lang.Object cameraSerialNumber32Chars_;
    /**
     * <code>required string cameraSerialNumber32Chars = 23;</code>
     */
    public boolean hasCameraSerialNumber32Chars() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>required string cameraSerialNumber32Chars = 23;</code>
     */
    public java.lang.String getCameraSerialNumber32Chars() {
      java.lang.Object ref = cameraSerialNumber32Chars_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cameraSerialNumber32Chars_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string cameraSerialNumber32Chars = 23;</code>
     */
    public com.google.protobuf.ByteString
        getCameraSerialNumber32CharsBytes() {
      java.lang.Object ref = cameraSerialNumber32Chars_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cameraSerialNumber32Chars_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IRENGINESERIALNUMBER32CHARS_FIELD_NUMBER = 24;
    private java.lang.Object irEngineSerialNumber32Chars_;
    /**
     * <code>required string irEngineSerialNumber32Chars = 24;</code>
     */
    public boolean hasIrEngineSerialNumber32Chars() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>required string irEngineSerialNumber32Chars = 24;</code>
     */
    public java.lang.String getIrEngineSerialNumber32Chars() {
      java.lang.Object ref = irEngineSerialNumber32Chars_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          irEngineSerialNumber32Chars_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string irEngineSerialNumber32Chars = 24;</code>
     */
    public com.google.protobuf.ByteString
        getIrEngineSerialNumber32CharsBytes() {
      java.lang.Object ref = irEngineSerialNumber32Chars_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        irEngineSerialNumber32Chars_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CAMERAAUDIOCAPABILITY_FIELD_NUMBER = 25;
    private com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB cameraAudioCapability_;
    /**
     * <code>required .AUDIO_CAPABILITY_DATA_VGPB cameraAudioCapability = 25;</code>
     */
    public boolean hasCameraAudioCapability() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>required .AUDIO_CAPABILITY_DATA_VGPB cameraAudioCapability = 25;</code>
     */
    public com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB getCameraAudioCapability() {
      return cameraAudioCapability_;
    }
    /**
     * <code>required .AUDIO_CAPABILITY_DATA_VGPB cameraAudioCapability = 25;</code>
     */
    public com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPBOrBuilder getCameraAudioCapabilityOrBuilder() {
      return cameraAudioCapability_;
    }

    private void initFields() {
      cameraFamily_ = com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.TI_FAMILY.TI_FAMILY_FELXCAM;
      cameraModelNumber_ = 0;
      cameraCapabilityFlags_ = 0;
      endUserPresentationWidth_ = 0;
      endUserPresentationHeight_ = 0;
      thermalImagerEndianness_ = com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.ENCODING_ENDIANNESS.T_ENCODING_ENDIANNESS_THERMAL_IMAGER;
      thermalImagerThumbnailWidth_ = 0;
      thermalImagerThumbnailHeight_ = 0;
      thermalImagerThumbnailFormat_ = com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THUMBNAIL_DATA_FORMAT.THUMBNAIL_DATA_FORMAT_INVALID;
      irSensorWidth_ = 0;
      irSensorHeight_ = 0;
      vlSensorWidth_ = 0;
      vlSensorHeight_ = 0;
      minimumCenterBoxWidth_ = 0;
      minimumCenterBoxHeight_ = 0;
      maximumCenterBoxWidth_ = 0;
      maximumCenterBoxHeight_ = 0;
      centerPointPixelIndex_ = 0;
      numCenterPointPixels_ = 0;
      cameraCalibrationDate_ = com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE.getDefaultInstance();
      softwareVersion_ = com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB.getDefaultInstance();
      companyName32Chars_ = "";
      cameraSerialNumber32Chars_ = "";
      irEngineSerialNumber32Chars_ = "";
      cameraAudioCapability_ = com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCameraFamily()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCameraModelNumber()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCameraCapabilityFlags()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEndUserPresentationWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEndUserPresentationHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasThermalImagerEndianness()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasThermalImagerThumbnailWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasThermalImagerThumbnailHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasThermalImagerThumbnailFormat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIrSensorWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIrSensorHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVlSensorWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasVlSensorHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinimumCenterBoxWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMinimumCenterBoxHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaximumCenterBoxWidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaximumCenterBoxHeight()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCenterPointPixelIndex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNumCenterPointPixels()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCameraCalibrationDate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSoftwareVersion()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCompanyName32Chars()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCameraSerialNumber32Chars()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIrEngineSerialNumber32Chars()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCameraAudioCapability()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getCameraCalibrationDate().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getSoftwareVersion().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getCameraAudioCapability().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, cameraFamily_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cameraModelNumber_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, cameraCapabilityFlags_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, endUserPresentationWidth_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, endUserPresentationHeight_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, thermalImagerEndianness_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, thermalImagerThumbnailWidth_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, thermalImagerThumbnailHeight_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeEnum(9, thermalImagerThumbnailFormat_.getNumber());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, irSensorWidth_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, irSensorHeight_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, vlSensorWidth_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, vlSensorHeight_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, minimumCenterBoxWidth_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, minimumCenterBoxHeight_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, maximumCenterBoxWidth_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, maximumCenterBoxHeight_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, centerPointPixelIndex_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, numCenterPointPixels_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeMessage(20, cameraCalibrationDate_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeMessage(21, softwareVersion_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeBytes(22, getCompanyName32CharsBytes());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeBytes(23, getCameraSerialNumber32CharsBytes());
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeBytes(24, getIrEngineSerialNumber32CharsBytes());
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeMessage(25, cameraAudioCapability_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, cameraFamily_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cameraModelNumber_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, cameraCapabilityFlags_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, endUserPresentationWidth_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, endUserPresentationHeight_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, thermalImagerEndianness_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, thermalImagerThumbnailWidth_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, thermalImagerThumbnailHeight_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, thermalImagerThumbnailFormat_.getNumber());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, irSensorWidth_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, irSensorHeight_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, vlSensorWidth_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, vlSensorHeight_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, minimumCenterBoxWidth_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, minimumCenterBoxHeight_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, maximumCenterBoxWidth_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, maximumCenterBoxHeight_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, centerPointPixelIndex_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, numCenterPointPixels_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, cameraCalibrationDate_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, softwareVersion_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(22, getCompanyName32CharsBytes());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(23, getCameraSerialNumber32CharsBytes());
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(24, getIrEngineSerialNumber32CharsBytes());
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, cameraAudioCapability_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code THERMAL_IMAGER_INFO_DATA_GPB}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:THERMAL_IMAGER_INFO_DATA_GPB)
        com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.internal_static_THERMAL_IMAGER_INFO_DATA_GPB_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.internal_static_THERMAL_IMAGER_INFO_DATA_GPB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB.class, com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB.Builder.class);
      }

      // Construct using com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCameraCalibrationDateFieldBuilder();
          getSoftwareVersionFieldBuilder();
          getCameraAudioCapabilityFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cameraFamily_ = com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.TI_FAMILY.TI_FAMILY_FELXCAM;
        bitField0_ = (bitField0_ & ~0x00000001);
        cameraModelNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cameraCapabilityFlags_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        endUserPresentationWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        endUserPresentationHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        thermalImagerEndianness_ = com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.ENCODING_ENDIANNESS.T_ENCODING_ENDIANNESS_THERMAL_IMAGER;
        bitField0_ = (bitField0_ & ~0x00000020);
        thermalImagerThumbnailWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        thermalImagerThumbnailHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        thermalImagerThumbnailFormat_ = com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THUMBNAIL_DATA_FORMAT.THUMBNAIL_DATA_FORMAT_INVALID;
        bitField0_ = (bitField0_ & ~0x00000100);
        irSensorWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        irSensorHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        vlSensorWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        vlSensorHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        minimumCenterBoxWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        minimumCenterBoxHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        maximumCenterBoxWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        maximumCenterBoxHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        centerPointPixelIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        numCenterPointPixels_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        if (cameraCalibrationDateBuilder_ == null) {
          cameraCalibrationDate_ = com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE.getDefaultInstance();
        } else {
          cameraCalibrationDateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        if (softwareVersionBuilder_ == null) {
          softwareVersion_ = com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB.getDefaultInstance();
        } else {
          softwareVersionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        companyName32Chars_ = "";
        bitField0_ = (bitField0_ & ~0x00200000);
        cameraSerialNumber32Chars_ = "";
        bitField0_ = (bitField0_ & ~0x00400000);
        irEngineSerialNumber32Chars_ = "";
        bitField0_ = (bitField0_ & ~0x00800000);
        if (cameraAudioCapabilityBuilder_ == null) {
          cameraAudioCapability_ = com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB.getDefaultInstance();
        } else {
          cameraAudioCapabilityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.internal_static_THERMAL_IMAGER_INFO_DATA_GPB_descriptor;
      }

      public com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB getDefaultInstanceForType() {
        return com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB.getDefaultInstance();
      }

      public com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB build() {
        com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB buildPartial() {
        com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB result = new com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cameraFamily_ = cameraFamily_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cameraModelNumber_ = cameraModelNumber_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cameraCapabilityFlags_ = cameraCapabilityFlags_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.endUserPresentationWidth_ = endUserPresentationWidth_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.endUserPresentationHeight_ = endUserPresentationHeight_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.thermalImagerEndianness_ = thermalImagerEndianness_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.thermalImagerThumbnailWidth_ = thermalImagerThumbnailWidth_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.thermalImagerThumbnailHeight_ = thermalImagerThumbnailHeight_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.thermalImagerThumbnailFormat_ = thermalImagerThumbnailFormat_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.irSensorWidth_ = irSensorWidth_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.irSensorHeight_ = irSensorHeight_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.vlSensorWidth_ = vlSensorWidth_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.vlSensorHeight_ = vlSensorHeight_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.minimumCenterBoxWidth_ = minimumCenterBoxWidth_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.minimumCenterBoxHeight_ = minimumCenterBoxHeight_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.maximumCenterBoxWidth_ = maximumCenterBoxWidth_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.maximumCenterBoxHeight_ = maximumCenterBoxHeight_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.centerPointPixelIndex_ = centerPointPixelIndex_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.numCenterPointPixels_ = numCenterPointPixels_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        if (cameraCalibrationDateBuilder_ == null) {
          result.cameraCalibrationDate_ = cameraCalibrationDate_;
        } else {
          result.cameraCalibrationDate_ = cameraCalibrationDateBuilder_.build();
        }
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        if (softwareVersionBuilder_ == null) {
          result.softwareVersion_ = softwareVersion_;
        } else {
          result.softwareVersion_ = softwareVersionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.companyName32Chars_ = companyName32Chars_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.cameraSerialNumber32Chars_ = cameraSerialNumber32Chars_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.irEngineSerialNumber32Chars_ = irEngineSerialNumber32Chars_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        if (cameraAudioCapabilityBuilder_ == null) {
          result.cameraAudioCapability_ = cameraAudioCapability_;
        } else {
          result.cameraAudioCapability_ = cameraAudioCapabilityBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB) {
          return mergeFrom((com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB other) {
        if (other == com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB.getDefaultInstance()) return this;
        if (other.hasCameraFamily()) {
          setCameraFamily(other.getCameraFamily());
        }
        if (other.hasCameraModelNumber()) {
          setCameraModelNumber(other.getCameraModelNumber());
        }
        if (other.hasCameraCapabilityFlags()) {
          setCameraCapabilityFlags(other.getCameraCapabilityFlags());
        }
        if (other.hasEndUserPresentationWidth()) {
          setEndUserPresentationWidth(other.getEndUserPresentationWidth());
        }
        if (other.hasEndUserPresentationHeight()) {
          setEndUserPresentationHeight(other.getEndUserPresentationHeight());
        }
        if (other.hasThermalImagerEndianness()) {
          setThermalImagerEndianness(other.getThermalImagerEndianness());
        }
        if (other.hasThermalImagerThumbnailWidth()) {
          setThermalImagerThumbnailWidth(other.getThermalImagerThumbnailWidth());
        }
        if (other.hasThermalImagerThumbnailHeight()) {
          setThermalImagerThumbnailHeight(other.getThermalImagerThumbnailHeight());
        }
        if (other.hasThermalImagerThumbnailFormat()) {
          setThermalImagerThumbnailFormat(other.getThermalImagerThumbnailFormat());
        }
        if (other.hasIrSensorWidth()) {
          setIrSensorWidth(other.getIrSensorWidth());
        }
        if (other.hasIrSensorHeight()) {
          setIrSensorHeight(other.getIrSensorHeight());
        }
        if (other.hasVlSensorWidth()) {
          setVlSensorWidth(other.getVlSensorWidth());
        }
        if (other.hasVlSensorHeight()) {
          setVlSensorHeight(other.getVlSensorHeight());
        }
        if (other.hasMinimumCenterBoxWidth()) {
          setMinimumCenterBoxWidth(other.getMinimumCenterBoxWidth());
        }
        if (other.hasMinimumCenterBoxHeight()) {
          setMinimumCenterBoxHeight(other.getMinimumCenterBoxHeight());
        }
        if (other.hasMaximumCenterBoxWidth()) {
          setMaximumCenterBoxWidth(other.getMaximumCenterBoxWidth());
        }
        if (other.hasMaximumCenterBoxHeight()) {
          setMaximumCenterBoxHeight(other.getMaximumCenterBoxHeight());
        }
        if (other.hasCenterPointPixelIndex()) {
          setCenterPointPixelIndex(other.getCenterPointPixelIndex());
        }
        if (other.hasNumCenterPointPixels()) {
          setNumCenterPointPixels(other.getNumCenterPointPixels());
        }
        if (other.hasCameraCalibrationDate()) {
          mergeCameraCalibrationDate(other.getCameraCalibrationDate());
        }
        if (other.hasSoftwareVersion()) {
          mergeSoftwareVersion(other.getSoftwareVersion());
        }
        if (other.hasCompanyName32Chars()) {
          bitField0_ |= 0x00200000;
          companyName32Chars_ = other.companyName32Chars_;
          onChanged();
        }
        if (other.hasCameraSerialNumber32Chars()) {
          bitField0_ |= 0x00400000;
          cameraSerialNumber32Chars_ = other.cameraSerialNumber32Chars_;
          onChanged();
        }
        if (other.hasIrEngineSerialNumber32Chars()) {
          bitField0_ |= 0x00800000;
          irEngineSerialNumber32Chars_ = other.irEngineSerialNumber32Chars_;
          onChanged();
        }
        if (other.hasCameraAudioCapability()) {
          mergeCameraAudioCapability(other.getCameraAudioCapability());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCameraFamily()) {
          
          return false;
        }
        if (!hasCameraModelNumber()) {
          
          return false;
        }
        if (!hasCameraCapabilityFlags()) {
          
          return false;
        }
        if (!hasEndUserPresentationWidth()) {
          
          return false;
        }
        if (!hasEndUserPresentationHeight()) {
          
          return false;
        }
        if (!hasThermalImagerEndianness()) {
          
          return false;
        }
        if (!hasThermalImagerThumbnailWidth()) {
          
          return false;
        }
        if (!hasThermalImagerThumbnailHeight()) {
          
          return false;
        }
        if (!hasThermalImagerThumbnailFormat()) {
          
          return false;
        }
        if (!hasIrSensorWidth()) {
          
          return false;
        }
        if (!hasIrSensorHeight()) {
          
          return false;
        }
        if (!hasVlSensorWidth()) {
          
          return false;
        }
        if (!hasVlSensorHeight()) {
          
          return false;
        }
        if (!hasMinimumCenterBoxWidth()) {
          
          return false;
        }
        if (!hasMinimumCenterBoxHeight()) {
          
          return false;
        }
        if (!hasMaximumCenterBoxWidth()) {
          
          return false;
        }
        if (!hasMaximumCenterBoxHeight()) {
          
          return false;
        }
        if (!hasCenterPointPixelIndex()) {
          
          return false;
        }
        if (!hasNumCenterPointPixels()) {
          
          return false;
        }
        if (!hasCameraCalibrationDate()) {
          
          return false;
        }
        if (!hasSoftwareVersion()) {
          
          return false;
        }
        if (!hasCompanyName32Chars()) {
          
          return false;
        }
        if (!hasCameraSerialNumber32Chars()) {
          
          return false;
        }
        if (!hasIrEngineSerialNumber32Chars()) {
          
          return false;
        }
        if (!hasCameraAudioCapability()) {
          
          return false;
        }
        if (!getCameraCalibrationDate().isInitialized()) {
          
          return false;
        }
        if (!getSoftwareVersion().isInitialized()) {
          
          return false;
        }
        if (!getCameraAudioCapability().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THERMAL_IMAGER_INFO_DATA_GPB) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.TI_FAMILY cameraFamily_ = com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.TI_FAMILY.TI_FAMILY_FELXCAM;
      /**
       * <code>required .TI_FAMILY cameraFamily = 1;</code>
       */
      public boolean hasCameraFamily() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .TI_FAMILY cameraFamily = 1;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.TI_FAMILY getCameraFamily() {
        return cameraFamily_;
      }
      /**
       * <code>required .TI_FAMILY cameraFamily = 1;</code>
       */
      public Builder setCameraFamily(com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.TI_FAMILY value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        cameraFamily_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .TI_FAMILY cameraFamily = 1;</code>
       */
      public Builder clearCameraFamily() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cameraFamily_ = com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.TI_FAMILY.TI_FAMILY_FELXCAM;
        onChanged();
        return this;
      }

      private int cameraModelNumber_ ;
      /**
       * <code>required int32 cameraModelNumber = 2;</code>
       */
      public boolean hasCameraModelNumber() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 cameraModelNumber = 2;</code>
       */
      public int getCameraModelNumber() {
        return cameraModelNumber_;
      }
      /**
       * <code>required int32 cameraModelNumber = 2;</code>
       */
      public Builder setCameraModelNumber(int value) {
        bitField0_ |= 0x00000002;
        cameraModelNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 cameraModelNumber = 2;</code>
       */
      public Builder clearCameraModelNumber() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cameraModelNumber_ = 0;
        onChanged();
        return this;
      }

      private int cameraCapabilityFlags_ ;
      /**
       * <code>required int32 cameraCapabilityFlags = 3;</code>
       */
      public boolean hasCameraCapabilityFlags() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 cameraCapabilityFlags = 3;</code>
       */
      public int getCameraCapabilityFlags() {
        return cameraCapabilityFlags_;
      }
      /**
       * <code>required int32 cameraCapabilityFlags = 3;</code>
       */
      public Builder setCameraCapabilityFlags(int value) {
        bitField0_ |= 0x00000004;
        cameraCapabilityFlags_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 cameraCapabilityFlags = 3;</code>
       */
      public Builder clearCameraCapabilityFlags() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cameraCapabilityFlags_ = 0;
        onChanged();
        return this;
      }

      private int endUserPresentationWidth_ ;
      /**
       * <code>required int32 endUserPresentationWidth = 4;</code>
       */
      public boolean hasEndUserPresentationWidth() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 endUserPresentationWidth = 4;</code>
       */
      public int getEndUserPresentationWidth() {
        return endUserPresentationWidth_;
      }
      /**
       * <code>required int32 endUserPresentationWidth = 4;</code>
       */
      public Builder setEndUserPresentationWidth(int value) {
        bitField0_ |= 0x00000008;
        endUserPresentationWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 endUserPresentationWidth = 4;</code>
       */
      public Builder clearEndUserPresentationWidth() {
        bitField0_ = (bitField0_ & ~0x00000008);
        endUserPresentationWidth_ = 0;
        onChanged();
        return this;
      }

      private int endUserPresentationHeight_ ;
      /**
       * <code>required int32 endUserPresentationHeight = 5;</code>
       */
      public boolean hasEndUserPresentationHeight() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 endUserPresentationHeight = 5;</code>
       */
      public int getEndUserPresentationHeight() {
        return endUserPresentationHeight_;
      }
      /**
       * <code>required int32 endUserPresentationHeight = 5;</code>
       */
      public Builder setEndUserPresentationHeight(int value) {
        bitField0_ |= 0x00000010;
        endUserPresentationHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 endUserPresentationHeight = 5;</code>
       */
      public Builder clearEndUserPresentationHeight() {
        bitField0_ = (bitField0_ & ~0x00000010);
        endUserPresentationHeight_ = 0;
        onChanged();
        return this;
      }

      private com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.ENCODING_ENDIANNESS thermalImagerEndianness_ = com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.ENCODING_ENDIANNESS.T_ENCODING_ENDIANNESS_THERMAL_IMAGER;
      /**
       * <code>required .ENCODING_ENDIANNESS thermalImagerEndianness = 6;</code>
       */
      public boolean hasThermalImagerEndianness() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required .ENCODING_ENDIANNESS thermalImagerEndianness = 6;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.ENCODING_ENDIANNESS getThermalImagerEndianness() {
        return thermalImagerEndianness_;
      }
      /**
       * <code>required .ENCODING_ENDIANNESS thermalImagerEndianness = 6;</code>
       */
      public Builder setThermalImagerEndianness(com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.ENCODING_ENDIANNESS value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        thermalImagerEndianness_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .ENCODING_ENDIANNESS thermalImagerEndianness = 6;</code>
       */
      public Builder clearThermalImagerEndianness() {
        bitField0_ = (bitField0_ & ~0x00000020);
        thermalImagerEndianness_ = com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.ENCODING_ENDIANNESS.T_ENCODING_ENDIANNESS_THERMAL_IMAGER;
        onChanged();
        return this;
      }

      private int thermalImagerThumbnailWidth_ ;
      /**
       * <code>required int32 thermalImagerThumbnailWidth = 7;</code>
       */
      public boolean hasThermalImagerThumbnailWidth() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 thermalImagerThumbnailWidth = 7;</code>
       */
      public int getThermalImagerThumbnailWidth() {
        return thermalImagerThumbnailWidth_;
      }
      /**
       * <code>required int32 thermalImagerThumbnailWidth = 7;</code>
       */
      public Builder setThermalImagerThumbnailWidth(int value) {
        bitField0_ |= 0x00000040;
        thermalImagerThumbnailWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 thermalImagerThumbnailWidth = 7;</code>
       */
      public Builder clearThermalImagerThumbnailWidth() {
        bitField0_ = (bitField0_ & ~0x00000040);
        thermalImagerThumbnailWidth_ = 0;
        onChanged();
        return this;
      }

      private int thermalImagerThumbnailHeight_ ;
      /**
       * <code>required int32 thermalImagerThumbnailHeight = 8;</code>
       */
      public boolean hasThermalImagerThumbnailHeight() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 thermalImagerThumbnailHeight = 8;</code>
       */
      public int getThermalImagerThumbnailHeight() {
        return thermalImagerThumbnailHeight_;
      }
      /**
       * <code>required int32 thermalImagerThumbnailHeight = 8;</code>
       */
      public Builder setThermalImagerThumbnailHeight(int value) {
        bitField0_ |= 0x00000080;
        thermalImagerThumbnailHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 thermalImagerThumbnailHeight = 8;</code>
       */
      public Builder clearThermalImagerThumbnailHeight() {
        bitField0_ = (bitField0_ & ~0x00000080);
        thermalImagerThumbnailHeight_ = 0;
        onChanged();
        return this;
      }

      private com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THUMBNAIL_DATA_FORMAT thermalImagerThumbnailFormat_ = com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THUMBNAIL_DATA_FORMAT.THUMBNAIL_DATA_FORMAT_INVALID;
      /**
       * <code>required .THUMBNAIL_DATA_FORMAT thermalImagerThumbnailFormat = 9;</code>
       */
      public boolean hasThermalImagerThumbnailFormat() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required .THUMBNAIL_DATA_FORMAT thermalImagerThumbnailFormat = 9;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THUMBNAIL_DATA_FORMAT getThermalImagerThumbnailFormat() {
        return thermalImagerThumbnailFormat_;
      }
      /**
       * <code>required .THUMBNAIL_DATA_FORMAT thermalImagerThumbnailFormat = 9;</code>
       */
      public Builder setThermalImagerThumbnailFormat(com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THUMBNAIL_DATA_FORMAT value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        thermalImagerThumbnailFormat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .THUMBNAIL_DATA_FORMAT thermalImagerThumbnailFormat = 9;</code>
       */
      public Builder clearThermalImagerThumbnailFormat() {
        bitField0_ = (bitField0_ & ~0x00000100);
        thermalImagerThumbnailFormat_ = com.aolais.electroraven.is2viewerbeta.protos.ThermalImagerInfoDataGPB.THUMBNAIL_DATA_FORMAT.THUMBNAIL_DATA_FORMAT_INVALID;
        onChanged();
        return this;
      }

      private int irSensorWidth_ ;
      /**
       * <code>required int32 irSensorWidth = 10;</code>
       */
      public boolean hasIrSensorWidth() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required int32 irSensorWidth = 10;</code>
       */
      public int getIrSensorWidth() {
        return irSensorWidth_;
      }
      /**
       * <code>required int32 irSensorWidth = 10;</code>
       */
      public Builder setIrSensorWidth(int value) {
        bitField0_ |= 0x00000200;
        irSensorWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 irSensorWidth = 10;</code>
       */
      public Builder clearIrSensorWidth() {
        bitField0_ = (bitField0_ & ~0x00000200);
        irSensorWidth_ = 0;
        onChanged();
        return this;
      }

      private int irSensorHeight_ ;
      /**
       * <code>required int32 irSensorHeight = 11;</code>
       */
      public boolean hasIrSensorHeight() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required int32 irSensorHeight = 11;</code>
       */
      public int getIrSensorHeight() {
        return irSensorHeight_;
      }
      /**
       * <code>required int32 irSensorHeight = 11;</code>
       */
      public Builder setIrSensorHeight(int value) {
        bitField0_ |= 0x00000400;
        irSensorHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 irSensorHeight = 11;</code>
       */
      public Builder clearIrSensorHeight() {
        bitField0_ = (bitField0_ & ~0x00000400);
        irSensorHeight_ = 0;
        onChanged();
        return this;
      }

      private int vlSensorWidth_ ;
      /**
       * <code>required int32 vlSensorWidth = 12;</code>
       */
      public boolean hasVlSensorWidth() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 vlSensorWidth = 12;</code>
       */
      public int getVlSensorWidth() {
        return vlSensorWidth_;
      }
      /**
       * <code>required int32 vlSensorWidth = 12;</code>
       */
      public Builder setVlSensorWidth(int value) {
        bitField0_ |= 0x00000800;
        vlSensorWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 vlSensorWidth = 12;</code>
       */
      public Builder clearVlSensorWidth() {
        bitField0_ = (bitField0_ & ~0x00000800);
        vlSensorWidth_ = 0;
        onChanged();
        return this;
      }

      private int vlSensorHeight_ ;
      /**
       * <code>required int32 vlSensorHeight = 13;</code>
       */
      public boolean hasVlSensorHeight() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required int32 vlSensorHeight = 13;</code>
       */
      public int getVlSensorHeight() {
        return vlSensorHeight_;
      }
      /**
       * <code>required int32 vlSensorHeight = 13;</code>
       */
      public Builder setVlSensorHeight(int value) {
        bitField0_ |= 0x00001000;
        vlSensorHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 vlSensorHeight = 13;</code>
       */
      public Builder clearVlSensorHeight() {
        bitField0_ = (bitField0_ & ~0x00001000);
        vlSensorHeight_ = 0;
        onChanged();
        return this;
      }

      private int minimumCenterBoxWidth_ ;
      /**
       * <code>required int32 minimumCenterBoxWidth = 14;</code>
       */
      public boolean hasMinimumCenterBoxWidth() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required int32 minimumCenterBoxWidth = 14;</code>
       */
      public int getMinimumCenterBoxWidth() {
        return minimumCenterBoxWidth_;
      }
      /**
       * <code>required int32 minimumCenterBoxWidth = 14;</code>
       */
      public Builder setMinimumCenterBoxWidth(int value) {
        bitField0_ |= 0x00002000;
        minimumCenterBoxWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 minimumCenterBoxWidth = 14;</code>
       */
      public Builder clearMinimumCenterBoxWidth() {
        bitField0_ = (bitField0_ & ~0x00002000);
        minimumCenterBoxWidth_ = 0;
        onChanged();
        return this;
      }

      private int minimumCenterBoxHeight_ ;
      /**
       * <code>required int32 minimumCenterBoxHeight = 15;</code>
       */
      public boolean hasMinimumCenterBoxHeight() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required int32 minimumCenterBoxHeight = 15;</code>
       */
      public int getMinimumCenterBoxHeight() {
        return minimumCenterBoxHeight_;
      }
      /**
       * <code>required int32 minimumCenterBoxHeight = 15;</code>
       */
      public Builder setMinimumCenterBoxHeight(int value) {
        bitField0_ |= 0x00004000;
        minimumCenterBoxHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 minimumCenterBoxHeight = 15;</code>
       */
      public Builder clearMinimumCenterBoxHeight() {
        bitField0_ = (bitField0_ & ~0x00004000);
        minimumCenterBoxHeight_ = 0;
        onChanged();
        return this;
      }

      private int maximumCenterBoxWidth_ ;
      /**
       * <code>required int32 maximumCenterBoxWidth = 16;</code>
       */
      public boolean hasMaximumCenterBoxWidth() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required int32 maximumCenterBoxWidth = 16;</code>
       */
      public int getMaximumCenterBoxWidth() {
        return maximumCenterBoxWidth_;
      }
      /**
       * <code>required int32 maximumCenterBoxWidth = 16;</code>
       */
      public Builder setMaximumCenterBoxWidth(int value) {
        bitField0_ |= 0x00008000;
        maximumCenterBoxWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 maximumCenterBoxWidth = 16;</code>
       */
      public Builder clearMaximumCenterBoxWidth() {
        bitField0_ = (bitField0_ & ~0x00008000);
        maximumCenterBoxWidth_ = 0;
        onChanged();
        return this;
      }

      private int maximumCenterBoxHeight_ ;
      /**
       * <code>required int32 maximumCenterBoxHeight = 17;</code>
       */
      public boolean hasMaximumCenterBoxHeight() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>required int32 maximumCenterBoxHeight = 17;</code>
       */
      public int getMaximumCenterBoxHeight() {
        return maximumCenterBoxHeight_;
      }
      /**
       * <code>required int32 maximumCenterBoxHeight = 17;</code>
       */
      public Builder setMaximumCenterBoxHeight(int value) {
        bitField0_ |= 0x00010000;
        maximumCenterBoxHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 maximumCenterBoxHeight = 17;</code>
       */
      public Builder clearMaximumCenterBoxHeight() {
        bitField0_ = (bitField0_ & ~0x00010000);
        maximumCenterBoxHeight_ = 0;
        onChanged();
        return this;
      }

      private int centerPointPixelIndex_ ;
      /**
       * <code>required int32 centerPointPixelIndex = 18;</code>
       */
      public boolean hasCenterPointPixelIndex() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>required int32 centerPointPixelIndex = 18;</code>
       */
      public int getCenterPointPixelIndex() {
        return centerPointPixelIndex_;
      }
      /**
       * <code>required int32 centerPointPixelIndex = 18;</code>
       */
      public Builder setCenterPointPixelIndex(int value) {
        bitField0_ |= 0x00020000;
        centerPointPixelIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 centerPointPixelIndex = 18;</code>
       */
      public Builder clearCenterPointPixelIndex() {
        bitField0_ = (bitField0_ & ~0x00020000);
        centerPointPixelIndex_ = 0;
        onChanged();
        return this;
      }

      private int numCenterPointPixels_ ;
      /**
       * <code>required int32 numCenterPointPixels = 19;</code>
       */
      public boolean hasNumCenterPointPixels() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>required int32 numCenterPointPixels = 19;</code>
       */
      public int getNumCenterPointPixels() {
        return numCenterPointPixels_;
      }
      /**
       * <code>required int32 numCenterPointPixels = 19;</code>
       */
      public Builder setNumCenterPointPixels(int value) {
        bitField0_ |= 0x00040000;
        numCenterPointPixels_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 numCenterPointPixels = 19;</code>
       */
      public Builder clearNumCenterPointPixels() {
        bitField0_ = (bitField0_ & ~0x00040000);
        numCenterPointPixels_ = 0;
        onChanged();
        return this;
      }

      private com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE cameraCalibrationDate_ = com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE, com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE.Builder, com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATEOrBuilder> cameraCalibrationDateBuilder_;
      /**
       * <code>required .CALIBRATION_DATE cameraCalibrationDate = 20;</code>
       */
      public boolean hasCameraCalibrationDate() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>required .CALIBRATION_DATE cameraCalibrationDate = 20;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE getCameraCalibrationDate() {
        if (cameraCalibrationDateBuilder_ == null) {
          return cameraCalibrationDate_;
        } else {
          return cameraCalibrationDateBuilder_.getMessage();
        }
      }
      /**
       * <code>required .CALIBRATION_DATE cameraCalibrationDate = 20;</code>
       */
      public Builder setCameraCalibrationDate(com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE value) {
        if (cameraCalibrationDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cameraCalibrationDate_ = value;
          onChanged();
        } else {
          cameraCalibrationDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>required .CALIBRATION_DATE cameraCalibrationDate = 20;</code>
       */
      public Builder setCameraCalibrationDate(
          com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE.Builder builderForValue) {
        if (cameraCalibrationDateBuilder_ == null) {
          cameraCalibrationDate_ = builderForValue.build();
          onChanged();
        } else {
          cameraCalibrationDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>required .CALIBRATION_DATE cameraCalibrationDate = 20;</code>
       */
      public Builder mergeCameraCalibrationDate(com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE value) {
        if (cameraCalibrationDateBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000) &&
              cameraCalibrationDate_ != com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE.getDefaultInstance()) {
            cameraCalibrationDate_ =
              com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE.newBuilder(cameraCalibrationDate_).mergeFrom(value).buildPartial();
          } else {
            cameraCalibrationDate_ = value;
          }
          onChanged();
        } else {
          cameraCalibrationDateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00080000;
        return this;
      }
      /**
       * <code>required .CALIBRATION_DATE cameraCalibrationDate = 20;</code>
       */
      public Builder clearCameraCalibrationDate() {
        if (cameraCalibrationDateBuilder_ == null) {
          cameraCalibrationDate_ = com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE.getDefaultInstance();
          onChanged();
        } else {
          cameraCalibrationDateBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }
      /**
       * <code>required .CALIBRATION_DATE cameraCalibrationDate = 20;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE.Builder getCameraCalibrationDateBuilder() {
        bitField0_ |= 0x00080000;
        onChanged();
        return getCameraCalibrationDateFieldBuilder().getBuilder();
      }
      /**
       * <code>required .CALIBRATION_DATE cameraCalibrationDate = 20;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATEOrBuilder getCameraCalibrationDateOrBuilder() {
        if (cameraCalibrationDateBuilder_ != null) {
          return cameraCalibrationDateBuilder_.getMessageOrBuilder();
        } else {
          return cameraCalibrationDate_;
        }
      }
      /**
       * <code>required .CALIBRATION_DATE cameraCalibrationDate = 20;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE, com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE.Builder, com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATEOrBuilder> 
          getCameraCalibrationDateFieldBuilder() {
        if (cameraCalibrationDateBuilder_ == null) {
          cameraCalibrationDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE, com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATE.Builder, com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.CALIBRATION_DATEOrBuilder>(
                  getCameraCalibrationDate(),
                  getParentForChildren(),
                  isClean());
          cameraCalibrationDate_ = null;
        }
        return cameraCalibrationDateBuilder_;
      }

      private com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB softwareVersion_ = com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB, com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB.Builder, com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPBOrBuilder> softwareVersionBuilder_;
      /**
       * <code>required .VERSION_DATA_VGPB softwareVersion = 21;</code>
       */
      public boolean hasSoftwareVersion() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>required .VERSION_DATA_VGPB softwareVersion = 21;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB getSoftwareVersion() {
        if (softwareVersionBuilder_ == null) {
          return softwareVersion_;
        } else {
          return softwareVersionBuilder_.getMessage();
        }
      }
      /**
       * <code>required .VERSION_DATA_VGPB softwareVersion = 21;</code>
       */
      public Builder setSoftwareVersion(com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB value) {
        if (softwareVersionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          softwareVersion_ = value;
          onChanged();
        } else {
          softwareVersionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>required .VERSION_DATA_VGPB softwareVersion = 21;</code>
       */
      public Builder setSoftwareVersion(
          com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB.Builder builderForValue) {
        if (softwareVersionBuilder_ == null) {
          softwareVersion_ = builderForValue.build();
          onChanged();
        } else {
          softwareVersionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>required .VERSION_DATA_VGPB softwareVersion = 21;</code>
       */
      public Builder mergeSoftwareVersion(com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB value) {
        if (softwareVersionBuilder_ == null) {
          if (((bitField0_ & 0x00100000) == 0x00100000) &&
              softwareVersion_ != com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB.getDefaultInstance()) {
            softwareVersion_ =
              com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB.newBuilder(softwareVersion_).mergeFrom(value).buildPartial();
          } else {
            softwareVersion_ = value;
          }
          onChanged();
        } else {
          softwareVersionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00100000;
        return this;
      }
      /**
       * <code>required .VERSION_DATA_VGPB softwareVersion = 21;</code>
       */
      public Builder clearSoftwareVersion() {
        if (softwareVersionBuilder_ == null) {
          softwareVersion_ = com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB.getDefaultInstance();
          onChanged();
        } else {
          softwareVersionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }
      /**
       * <code>required .VERSION_DATA_VGPB softwareVersion = 21;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB.Builder getSoftwareVersionBuilder() {
        bitField0_ |= 0x00100000;
        onChanged();
        return getSoftwareVersionFieldBuilder().getBuilder();
      }
      /**
       * <code>required .VERSION_DATA_VGPB softwareVersion = 21;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPBOrBuilder getSoftwareVersionOrBuilder() {
        if (softwareVersionBuilder_ != null) {
          return softwareVersionBuilder_.getMessageOrBuilder();
        } else {
          return softwareVersion_;
        }
      }
      /**
       * <code>required .VERSION_DATA_VGPB softwareVersion = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB, com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB.Builder, com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPBOrBuilder> 
          getSoftwareVersionFieldBuilder() {
        if (softwareVersionBuilder_ == null) {
          softwareVersionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB, com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPB.Builder, com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.VERSION_DATA_VGPBOrBuilder>(
                  getSoftwareVersion(),
                  getParentForChildren(),
                  isClean());
          softwareVersion_ = null;
        }
        return softwareVersionBuilder_;
      }

      private java.lang.Object companyName32Chars_ = "";
      /**
       * <code>required string companyName32Chars = 22;</code>
       */
      public boolean hasCompanyName32Chars() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>required string companyName32Chars = 22;</code>
       */
      public java.lang.String getCompanyName32Chars() {
        java.lang.Object ref = companyName32Chars_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            companyName32Chars_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string companyName32Chars = 22;</code>
       */
      public com.google.protobuf.ByteString
          getCompanyName32CharsBytes() {
        java.lang.Object ref = companyName32Chars_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          companyName32Chars_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string companyName32Chars = 22;</code>
       */
      public Builder setCompanyName32Chars(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00200000;
        companyName32Chars_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string companyName32Chars = 22;</code>
       */
      public Builder clearCompanyName32Chars() {
        bitField0_ = (bitField0_ & ~0x00200000);
        companyName32Chars_ = getDefaultInstance().getCompanyName32Chars();
        onChanged();
        return this;
      }
      /**
       * <code>required string companyName32Chars = 22;</code>
       */
      public Builder setCompanyName32CharsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00200000;
        companyName32Chars_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object cameraSerialNumber32Chars_ = "";
      /**
       * <code>required string cameraSerialNumber32Chars = 23;</code>
       */
      public boolean hasCameraSerialNumber32Chars() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>required string cameraSerialNumber32Chars = 23;</code>
       */
      public java.lang.String getCameraSerialNumber32Chars() {
        java.lang.Object ref = cameraSerialNumber32Chars_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            cameraSerialNumber32Chars_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string cameraSerialNumber32Chars = 23;</code>
       */
      public com.google.protobuf.ByteString
          getCameraSerialNumber32CharsBytes() {
        java.lang.Object ref = cameraSerialNumber32Chars_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cameraSerialNumber32Chars_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string cameraSerialNumber32Chars = 23;</code>
       */
      public Builder setCameraSerialNumber32Chars(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00400000;
        cameraSerialNumber32Chars_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string cameraSerialNumber32Chars = 23;</code>
       */
      public Builder clearCameraSerialNumber32Chars() {
        bitField0_ = (bitField0_ & ~0x00400000);
        cameraSerialNumber32Chars_ = getDefaultInstance().getCameraSerialNumber32Chars();
        onChanged();
        return this;
      }
      /**
       * <code>required string cameraSerialNumber32Chars = 23;</code>
       */
      public Builder setCameraSerialNumber32CharsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00400000;
        cameraSerialNumber32Chars_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object irEngineSerialNumber32Chars_ = "";
      /**
       * <code>required string irEngineSerialNumber32Chars = 24;</code>
       */
      public boolean hasIrEngineSerialNumber32Chars() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>required string irEngineSerialNumber32Chars = 24;</code>
       */
      public java.lang.String getIrEngineSerialNumber32Chars() {
        java.lang.Object ref = irEngineSerialNumber32Chars_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            irEngineSerialNumber32Chars_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string irEngineSerialNumber32Chars = 24;</code>
       */
      public com.google.protobuf.ByteString
          getIrEngineSerialNumber32CharsBytes() {
        java.lang.Object ref = irEngineSerialNumber32Chars_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          irEngineSerialNumber32Chars_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string irEngineSerialNumber32Chars = 24;</code>
       */
      public Builder setIrEngineSerialNumber32Chars(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00800000;
        irEngineSerialNumber32Chars_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string irEngineSerialNumber32Chars = 24;</code>
       */
      public Builder clearIrEngineSerialNumber32Chars() {
        bitField0_ = (bitField0_ & ~0x00800000);
        irEngineSerialNumber32Chars_ = getDefaultInstance().getIrEngineSerialNumber32Chars();
        onChanged();
        return this;
      }
      /**
       * <code>required string irEngineSerialNumber32Chars = 24;</code>
       */
      public Builder setIrEngineSerialNumber32CharsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00800000;
        irEngineSerialNumber32Chars_ = value;
        onChanged();
        return this;
      }

      private com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB cameraAudioCapability_ = com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB, com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB.Builder, com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPBOrBuilder> cameraAudioCapabilityBuilder_;
      /**
       * <code>required .AUDIO_CAPABILITY_DATA_VGPB cameraAudioCapability = 25;</code>
       */
      public boolean hasCameraAudioCapability() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>required .AUDIO_CAPABILITY_DATA_VGPB cameraAudioCapability = 25;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB getCameraAudioCapability() {
        if (cameraAudioCapabilityBuilder_ == null) {
          return cameraAudioCapability_;
        } else {
          return cameraAudioCapabilityBuilder_.getMessage();
        }
      }
      /**
       * <code>required .AUDIO_CAPABILITY_DATA_VGPB cameraAudioCapability = 25;</code>
       */
      public Builder setCameraAudioCapability(com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB value) {
        if (cameraAudioCapabilityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cameraAudioCapability_ = value;
          onChanged();
        } else {
          cameraAudioCapabilityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>required .AUDIO_CAPABILITY_DATA_VGPB cameraAudioCapability = 25;</code>
       */
      public Builder setCameraAudioCapability(
          com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB.Builder builderForValue) {
        if (cameraAudioCapabilityBuilder_ == null) {
          cameraAudioCapability_ = builderForValue.build();
          onChanged();
        } else {
          cameraAudioCapabilityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>required .AUDIO_CAPABILITY_DATA_VGPB cameraAudioCapability = 25;</code>
       */
      public Builder mergeCameraAudioCapability(com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB value) {
        if (cameraAudioCapabilityBuilder_ == null) {
          if (((bitField0_ & 0x01000000) == 0x01000000) &&
              cameraAudioCapability_ != com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB.getDefaultInstance()) {
            cameraAudioCapability_ =
              com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB.newBuilder(cameraAudioCapability_).mergeFrom(value).buildPartial();
          } else {
            cameraAudioCapability_ = value;
          }
          onChanged();
        } else {
          cameraAudioCapabilityBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>required .AUDIO_CAPABILITY_DATA_VGPB cameraAudioCapability = 25;</code>
       */
      public Builder clearCameraAudioCapability() {
        if (cameraAudioCapabilityBuilder_ == null) {
          cameraAudioCapability_ = com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB.getDefaultInstance();
          onChanged();
        } else {
          cameraAudioCapabilityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        return this;
      }
      /**
       * <code>required .AUDIO_CAPABILITY_DATA_VGPB cameraAudioCapability = 25;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB.Builder getCameraAudioCapabilityBuilder() {
        bitField0_ |= 0x01000000;
        onChanged();
        return getCameraAudioCapabilityFieldBuilder().getBuilder();
      }
      /**
       * <code>required .AUDIO_CAPABILITY_DATA_VGPB cameraAudioCapability = 25;</code>
       */
      public com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPBOrBuilder getCameraAudioCapabilityOrBuilder() {
        if (cameraAudioCapabilityBuilder_ != null) {
          return cameraAudioCapabilityBuilder_.getMessageOrBuilder();
        } else {
          return cameraAudioCapability_;
        }
      }
      /**
       * <code>required .AUDIO_CAPABILITY_DATA_VGPB cameraAudioCapability = 25;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB, com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB.Builder, com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPBOrBuilder> 
          getCameraAudioCapabilityFieldBuilder() {
        if (cameraAudioCapabilityBuilder_ == null) {
          cameraAudioCapabilityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB, com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPB.Builder, com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.AUDIO_CAPABILITY_DATA_VGPBOrBuilder>(
                  getCameraAudioCapability(),
                  getParentForChildren(),
                  isClean());
          cameraAudioCapability_ = null;
        }
        return cameraAudioCapabilityBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:THERMAL_IMAGER_INFO_DATA_GPB)
    }

    static {
      defaultInstance = new THERMAL_IMAGER_INFO_DATA_GPB(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:THERMAL_IMAGER_INFO_DATA_GPB)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_THERMAL_IMAGER_INFO_DATA_GPB_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_THERMAL_IMAGER_INFO_DATA_GPB_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"THERMAL_IMAGER_INFO_DATA_GPB.proto\032\026CA" +
      "LIBRATION_DATE.proto\032 AUDIO_CAPABILITY_D" +
      "ATA_VGPB.proto\032\027VERSION_DATA_VGPB.proto\"" +
      "\227\007\n\034THERMAL_IMAGER_INFO_DATA_GPB\022 \n\014came" +
      "raFamily\030\001 \002(\0162\n.TI_FAMILY\022\031\n\021cameraMode" +
      "lNumber\030\002 \002(\005\022\035\n\025cameraCapabilityFlags\030\003" +
      " \002(\005\022 \n\030endUserPresentationWidth\030\004 \002(\005\022!" +
      "\n\031endUserPresentationHeight\030\005 \002(\005\0225\n\027the" +
      "rmalImagerEndianness\030\006 \002(\0162\024.ENCODING_EN" +
      "DIANNESS\022#\n\033thermalImagerThumbnailWidth\030",
      "\007 \002(\005\022$\n\034thermalImagerThumbnailHeight\030\010 " +
      "\002(\005\022<\n\034thermalImagerThumbnailFormat\030\t \002(" +
      "\0162\026.THUMBNAIL_DATA_FORMAT\022\025\n\rirSensorWid" +
      "th\030\n \002(\005\022\026\n\016irSensorHeight\030\013 \002(\005\022\025\n\rvlSe" +
      "nsorWidth\030\014 \002(\005\022\026\n\016vlSensorHeight\030\r \002(\005\022" +
      "\035\n\025minimumCenterBoxWidth\030\016 \002(\005\022\036\n\026minimu" +
      "mCenterBoxHeight\030\017 \002(\005\022\035\n\025maximumCenterB" +
      "oxWidth\030\020 \002(\005\022\036\n\026maximumCenterBoxHeight\030" +
      "\021 \002(\005\022\035\n\025centerPointPixelIndex\030\022 \002(\005\022\034\n\024" +
      "numCenterPointPixels\030\023 \002(\005\0220\n\025cameraCali",
      "brationDate\030\024 \002(\0132\021.CALIBRATION_DATE\022+\n\017" +
      "softwareVersion\030\025 \002(\0132\022.VERSION_DATA_VGP" +
      "B\022\032\n\022companyName32Chars\030\026 \002(\t\022!\n\031cameraS" +
      "erialNumber32Chars\030\027 \002(\t\022#\n\033irEngineSeri" +
      "alNumber32Chars\030\030 \002(\t\022:\n\025cameraAudioCapa" +
      "bility\030\031 \002(\0132\033.AUDIO_CAPABILITY_DATA_VGP" +
      "B*\225\001\n\tTI_FAMILY\022\025\n\021TI_FAMILY_FELXCAM\020\000\022\027" +
      "\n\023TI_FAMILY_GLADIATOR\020\001\022\025\n\021TI_FAMILY_NEM" +
      "ESIS\020\002\022\025\n\021TI_FAMILY_ROMULUS\020\003\022\024\n\020TI_FAMI" +
      "LY_IRISYS\020\004\022\024\n\020TI_FAMILY_GEMINI\020\005*\201\001\n\023EN",
      "CODING_ENDIANNESS\0221\n$T_ENCODING_ENDIANNE" +
      "SS_THERMAL_IMAGER\020\377\377\377\377\377\377\377\377\377\001\022\034\n\030T_ENCODI" +
      "NG_LITTLE_ENDIAN\020\000\022\031\n\025T_ENCODING_BIG_END" +
      "IAN\020\001*\247\001\n\025THUMBNAIL_DATA_FORMAT\022!\n\035THUMB" +
      "NAIL_DATA_FORMAT_INVALID\020\000\022)\n%THUMBNAIL_" +
      "DATA_FORMAT_TOP_DOWN_RGB565\020\001\022\036\n\032THUMBNA" +
      "IL_DATA_FORMAT_JPEG\020\002\022 \n\034THUMBNAIL_DATA_" +
      "FORMAT_YUV422\020\003BH\n,com.aolais.electrorav" +
      "en.is2viewerbeta.protosB\030ThermalImagerIn" +
      "foDataGPB"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.getDescriptor(),
          com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.getDescriptor(),
          com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.getDescriptor(),
        }, assigner);
    internal_static_THERMAL_IMAGER_INFO_DATA_GPB_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_THERMAL_IMAGER_INFO_DATA_GPB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_THERMAL_IMAGER_INFO_DATA_GPB_descriptor,
        new java.lang.String[] { "CameraFamily", "CameraModelNumber", "CameraCapabilityFlags", "EndUserPresentationWidth", "EndUserPresentationHeight", "ThermalImagerEndianness", "ThermalImagerThumbnailWidth", "ThermalImagerThumbnailHeight", "ThermalImagerThumbnailFormat", "IrSensorWidth", "IrSensorHeight", "VlSensorWidth", "VlSensorHeight", "MinimumCenterBoxWidth", "MinimumCenterBoxHeight", "MaximumCenterBoxWidth", "MaximumCenterBoxHeight", "CenterPointPixelIndex", "NumCenterPointPixels", "CameraCalibrationDate", "SoftwareVersion", "CompanyName32Chars", "CameraSerialNumber32Chars", "IrEngineSerialNumber32Chars", "CameraAudioCapability", });
    com.aolais.electroraven.is2viewerbeta.protos.CalibrationDate.getDescriptor();
    com.aolais.electroraven.is2viewerbeta.protos.AudioCapabilityDataVGPB.getDescriptor();
    com.aolais.electroraven.is2viewerbeta.protos.VersionDataVGPB.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
