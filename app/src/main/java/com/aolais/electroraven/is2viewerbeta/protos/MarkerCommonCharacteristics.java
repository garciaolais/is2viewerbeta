// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MARKER_COMMON_CHARACTERISTICS.proto

package com.aolais.electroraven.is2viewerbeta.protos;

public final class MarkerCommonCharacteristics {
  private MarkerCommonCharacteristics() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MARKER_COMMON_CHARACTERISTICSOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MARKER_COMMON_CHARACTERISTICS)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string uniqueIDString = 1;</code>
     */
    boolean hasUniqueIDString();
    /**
     * <code>required string uniqueIDString = 1;</code>
     */
    java.lang.String getUniqueIDString();
    /**
     * <code>required string uniqueIDString = 1;</code>
     */
    com.google.protobuf.ByteString
        getUniqueIDStringBytes();

    /**
     * <code>required string markerName = 2;</code>
     */
    boolean hasMarkerName();
    /**
     * <code>required string markerName = 2;</code>
     */
    java.lang.String getMarkerName();
    /**
     * <code>required string markerName = 2;</code>
     */
    com.google.protobuf.ByteString
        getMarkerNameBytes();

    /**
     * <code>required bool markerEnabledFlag = 3;</code>
     */
    boolean hasMarkerEnabledFlag();
    /**
     * <code>required bool markerEnabledFlag = 3;</code>
     */
    boolean getMarkerEnabledFlag();

    /**
     * <code>required bool useImageEBT = 4;</code>
     */
    boolean hasUseImageEBT();
    /**
     * <code>required bool useImageEBT = 4;</code>
     */
    boolean getUseImageEBT();

    /**
     * <code>optional float markerTempC_Average = 5;</code>
     */
    boolean hasMarkerTempCAverage();
    /**
     * <code>optional float markerTempC_Average = 5;</code>
     */
    float getMarkerTempCAverage();

    /**
     * <code>optional float markerTempC_Min = 6;</code>
     */
    boolean hasMarkerTempCMin();
    /**
     * <code>optional float markerTempC_Min = 6;</code>
     */
    float getMarkerTempCMin();

    /**
     * <code>optional float markerTempC_Max = 7;</code>
     */
    boolean hasMarkerTempCMax();
    /**
     * <code>optional float markerTempC_Max = 7;</code>
     */
    float getMarkerTempCMax();

    /**
     * <code>optional float markerEmissivity = 8;</code>
     */
    boolean hasMarkerEmissivity();
    /**
     * <code>optional float markerEmissivity = 8;</code>
     */
    float getMarkerEmissivity();

    /**
     * <code>optional float markerBackgroundTempC = 9;</code>
     */
    boolean hasMarkerBackgroundTempC();
    /**
     * <code>optional float markerBackgroundTempC = 9;</code>
     */
    float getMarkerBackgroundTempC();

    /**
     * <code>optional float markerTransmission = 10;</code>
     */
    boolean hasMarkerTransmission();
    /**
     * <code>optional float markerTransmission = 10;</code>
     */
    float getMarkerTransmission();

    /**
     * <code>optional string presentationSettingsXML = 11;</code>
     */
    boolean hasPresentationSettingsXML();
    /**
     * <code>optional string presentationSettingsXML = 11;</code>
     */
    java.lang.String getPresentationSettingsXML();
    /**
     * <code>optional string presentationSettingsXML = 11;</code>
     */
    com.google.protobuf.ByteString
        getPresentationSettingsXMLBytes();

    /**
     * <code>optional string annotationsXML = 12;</code>
     */
    boolean hasAnnotationsXML();
    /**
     * <code>optional string annotationsXML = 12;</code>
     */
    java.lang.String getAnnotationsXML();
    /**
     * <code>optional string annotationsXML = 12;</code>
     */
    com.google.protobuf.ByteString
        getAnnotationsXMLBytes();
  }
  /**
   * Protobuf type {@code MARKER_COMMON_CHARACTERISTICS}
   */
  public static final class MARKER_COMMON_CHARACTERISTICS extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MARKER_COMMON_CHARACTERISTICS)
      MARKER_COMMON_CHARACTERISTICSOrBuilder {
    // Use MARKER_COMMON_CHARACTERISTICS.newBuilder() to construct.
    private MARKER_COMMON_CHARACTERISTICS(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MARKER_COMMON_CHARACTERISTICS(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MARKER_COMMON_CHARACTERISTICS defaultInstance;
    public static MARKER_COMMON_CHARACTERISTICS getDefaultInstance() {
      return defaultInstance;
    }

    public MARKER_COMMON_CHARACTERISTICS getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MARKER_COMMON_CHARACTERISTICS(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              uniqueIDString_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              markerName_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              markerEnabledFlag_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              useImageEBT_ = input.readBool();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              markerTempCAverage_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              markerTempCMin_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              markerTempCMax_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              markerEmissivity_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              markerBackgroundTempC_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              markerTransmission_ = input.readFloat();
              break;
            }
            case 90: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000400;
              presentationSettingsXML_ = bs;
              break;
            }
            case 98: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000800;
              annotationsXML_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.internal_static_MARKER_COMMON_CHARACTERISTICS_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.internal_static_MARKER_COMMON_CHARACTERISTICS_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS.class, com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS.Builder.class);
    }

    public static com.google.protobuf.Parser<MARKER_COMMON_CHARACTERISTICS> PARSER =
        new com.google.protobuf.AbstractParser<MARKER_COMMON_CHARACTERISTICS>() {
      public MARKER_COMMON_CHARACTERISTICS parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MARKER_COMMON_CHARACTERISTICS(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MARKER_COMMON_CHARACTERISTICS> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int UNIQUEIDSTRING_FIELD_NUMBER = 1;
    private java.lang.Object uniqueIDString_;
    /**
     * <code>required string uniqueIDString = 1;</code>
     */
    public boolean hasUniqueIDString() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string uniqueIDString = 1;</code>
     */
    public java.lang.String getUniqueIDString() {
      java.lang.Object ref = uniqueIDString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uniqueIDString_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string uniqueIDString = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUniqueIDStringBytes() {
      java.lang.Object ref = uniqueIDString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uniqueIDString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MARKERNAME_FIELD_NUMBER = 2;
    private java.lang.Object markerName_;
    /**
     * <code>required string markerName = 2;</code>
     */
    public boolean hasMarkerName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string markerName = 2;</code>
     */
    public java.lang.String getMarkerName() {
      java.lang.Object ref = markerName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          markerName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string markerName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMarkerNameBytes() {
      java.lang.Object ref = markerName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        markerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MARKERENABLEDFLAG_FIELD_NUMBER = 3;
    private boolean markerEnabledFlag_;
    /**
     * <code>required bool markerEnabledFlag = 3;</code>
     */
    public boolean hasMarkerEnabledFlag() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bool markerEnabledFlag = 3;</code>
     */
    public boolean getMarkerEnabledFlag() {
      return markerEnabledFlag_;
    }

    public static final int USEIMAGEEBT_FIELD_NUMBER = 4;
    private boolean useImageEBT_;
    /**
     * <code>required bool useImageEBT = 4;</code>
     */
    public boolean hasUseImageEBT() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bool useImageEBT = 4;</code>
     */
    public boolean getUseImageEBT() {
      return useImageEBT_;
    }

    public static final int MARKERTEMPC_AVERAGE_FIELD_NUMBER = 5;
    private float markerTempCAverage_;
    /**
     * <code>optional float markerTempC_Average = 5;</code>
     */
    public boolean hasMarkerTempCAverage() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float markerTempC_Average = 5;</code>
     */
    public float getMarkerTempCAverage() {
      return markerTempCAverage_;
    }

    public static final int MARKERTEMPC_MIN_FIELD_NUMBER = 6;
    private float markerTempCMin_;
    /**
     * <code>optional float markerTempC_Min = 6;</code>
     */
    public boolean hasMarkerTempCMin() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float markerTempC_Min = 6;</code>
     */
    public float getMarkerTempCMin() {
      return markerTempCMin_;
    }

    public static final int MARKERTEMPC_MAX_FIELD_NUMBER = 7;
    private float markerTempCMax_;
    /**
     * <code>optional float markerTempC_Max = 7;</code>
     */
    public boolean hasMarkerTempCMax() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float markerTempC_Max = 7;</code>
     */
    public float getMarkerTempCMax() {
      return markerTempCMax_;
    }

    public static final int MARKEREMISSIVITY_FIELD_NUMBER = 8;
    private float markerEmissivity_;
    /**
     * <code>optional float markerEmissivity = 8;</code>
     */
    public boolean hasMarkerEmissivity() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float markerEmissivity = 8;</code>
     */
    public float getMarkerEmissivity() {
      return markerEmissivity_;
    }

    public static final int MARKERBACKGROUNDTEMPC_FIELD_NUMBER = 9;
    private float markerBackgroundTempC_;
    /**
     * <code>optional float markerBackgroundTempC = 9;</code>
     */
    public boolean hasMarkerBackgroundTempC() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float markerBackgroundTempC = 9;</code>
     */
    public float getMarkerBackgroundTempC() {
      return markerBackgroundTempC_;
    }

    public static final int MARKERTRANSMISSION_FIELD_NUMBER = 10;
    private float markerTransmission_;
    /**
     * <code>optional float markerTransmission = 10;</code>
     */
    public boolean hasMarkerTransmission() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float markerTransmission = 10;</code>
     */
    public float getMarkerTransmission() {
      return markerTransmission_;
    }

    public static final int PRESENTATIONSETTINGSXML_FIELD_NUMBER = 11;
    private java.lang.Object presentationSettingsXML_;
    /**
     * <code>optional string presentationSettingsXML = 11;</code>
     */
    public boolean hasPresentationSettingsXML() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string presentationSettingsXML = 11;</code>
     */
    public java.lang.String getPresentationSettingsXML() {
      java.lang.Object ref = presentationSettingsXML_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          presentationSettingsXML_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string presentationSettingsXML = 11;</code>
     */
    public com.google.protobuf.ByteString
        getPresentationSettingsXMLBytes() {
      java.lang.Object ref = presentationSettingsXML_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        presentationSettingsXML_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ANNOTATIONSXML_FIELD_NUMBER = 12;
    private java.lang.Object annotationsXML_;
    /**
     * <code>optional string annotationsXML = 12;</code>
     */
    public boolean hasAnnotationsXML() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string annotationsXML = 12;</code>
     */
    public java.lang.String getAnnotationsXML() {
      java.lang.Object ref = annotationsXML_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          annotationsXML_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string annotationsXML = 12;</code>
     */
    public com.google.protobuf.ByteString
        getAnnotationsXMLBytes() {
      java.lang.Object ref = annotationsXML_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        annotationsXML_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      uniqueIDString_ = "";
      markerName_ = "";
      markerEnabledFlag_ = false;
      useImageEBT_ = false;
      markerTempCAverage_ = 0F;
      markerTempCMin_ = 0F;
      markerTempCMax_ = 0F;
      markerEmissivity_ = 0F;
      markerBackgroundTempC_ = 0F;
      markerTransmission_ = 0F;
      presentationSettingsXML_ = "";
      annotationsXML_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUniqueIDString()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMarkerName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMarkerEnabledFlag()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUseImageEBT()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUniqueIDStringBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMarkerNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, markerEnabledFlag_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, useImageEBT_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, markerTempCAverage_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, markerTempCMin_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, markerTempCMax_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, markerEmissivity_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, markerBackgroundTempC_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, markerTransmission_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getPresentationSettingsXMLBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getAnnotationsXMLBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUniqueIDStringBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMarkerNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, markerEnabledFlag_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, useImageEBT_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, markerTempCAverage_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, markerTempCMin_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, markerTempCMax_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, markerEmissivity_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, markerBackgroundTempC_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, markerTransmission_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getPresentationSettingsXMLBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getAnnotationsXMLBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MARKER_COMMON_CHARACTERISTICS}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MARKER_COMMON_CHARACTERISTICS)
        com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICSOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.internal_static_MARKER_COMMON_CHARACTERISTICS_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.internal_static_MARKER_COMMON_CHARACTERISTICS_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS.class, com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS.Builder.class);
      }

      // Construct using com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uniqueIDString_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        markerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        markerEnabledFlag_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        useImageEBT_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        markerTempCAverage_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        markerTempCMin_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        markerTempCMax_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        markerEmissivity_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        markerBackgroundTempC_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        markerTransmission_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        presentationSettingsXML_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        annotationsXML_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.internal_static_MARKER_COMMON_CHARACTERISTICS_descriptor;
      }

      public com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS getDefaultInstanceForType() {
        return com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS.getDefaultInstance();
      }

      public com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS build() {
        com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS buildPartial() {
        com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS result = new com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uniqueIDString_ = uniqueIDString_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.markerName_ = markerName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.markerEnabledFlag_ = markerEnabledFlag_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.useImageEBT_ = useImageEBT_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.markerTempCAverage_ = markerTempCAverage_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.markerTempCMin_ = markerTempCMin_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.markerTempCMax_ = markerTempCMax_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.markerEmissivity_ = markerEmissivity_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.markerBackgroundTempC_ = markerBackgroundTempC_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.markerTransmission_ = markerTransmission_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.presentationSettingsXML_ = presentationSettingsXML_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.annotationsXML_ = annotationsXML_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS) {
          return mergeFrom((com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS other) {
        if (other == com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS.getDefaultInstance()) return this;
        if (other.hasUniqueIDString()) {
          bitField0_ |= 0x00000001;
          uniqueIDString_ = other.uniqueIDString_;
          onChanged();
        }
        if (other.hasMarkerName()) {
          bitField0_ |= 0x00000002;
          markerName_ = other.markerName_;
          onChanged();
        }
        if (other.hasMarkerEnabledFlag()) {
          setMarkerEnabledFlag(other.getMarkerEnabledFlag());
        }
        if (other.hasUseImageEBT()) {
          setUseImageEBT(other.getUseImageEBT());
        }
        if (other.hasMarkerTempCAverage()) {
          setMarkerTempCAverage(other.getMarkerTempCAverage());
        }
        if (other.hasMarkerTempCMin()) {
          setMarkerTempCMin(other.getMarkerTempCMin());
        }
        if (other.hasMarkerTempCMax()) {
          setMarkerTempCMax(other.getMarkerTempCMax());
        }
        if (other.hasMarkerEmissivity()) {
          setMarkerEmissivity(other.getMarkerEmissivity());
        }
        if (other.hasMarkerBackgroundTempC()) {
          setMarkerBackgroundTempC(other.getMarkerBackgroundTempC());
        }
        if (other.hasMarkerTransmission()) {
          setMarkerTransmission(other.getMarkerTransmission());
        }
        if (other.hasPresentationSettingsXML()) {
          bitField0_ |= 0x00000400;
          presentationSettingsXML_ = other.presentationSettingsXML_;
          onChanged();
        }
        if (other.hasAnnotationsXML()) {
          bitField0_ |= 0x00000800;
          annotationsXML_ = other.annotationsXML_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUniqueIDString()) {
          
          return false;
        }
        if (!hasMarkerName()) {
          
          return false;
        }
        if (!hasMarkerEnabledFlag()) {
          
          return false;
        }
        if (!hasUseImageEBT()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.aolais.electroraven.is2viewerbeta.protos.MarkerCommonCharacteristics.MARKER_COMMON_CHARACTERISTICS) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object uniqueIDString_ = "";
      /**
       * <code>required string uniqueIDString = 1;</code>
       */
      public boolean hasUniqueIDString() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string uniqueIDString = 1;</code>
       */
      public java.lang.String getUniqueIDString() {
        java.lang.Object ref = uniqueIDString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            uniqueIDString_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string uniqueIDString = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUniqueIDStringBytes() {
        java.lang.Object ref = uniqueIDString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uniqueIDString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string uniqueIDString = 1;</code>
       */
      public Builder setUniqueIDString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uniqueIDString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string uniqueIDString = 1;</code>
       */
      public Builder clearUniqueIDString() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uniqueIDString_ = getDefaultInstance().getUniqueIDString();
        onChanged();
        return this;
      }
      /**
       * <code>required string uniqueIDString = 1;</code>
       */
      public Builder setUniqueIDStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uniqueIDString_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object markerName_ = "";
      /**
       * <code>required string markerName = 2;</code>
       */
      public boolean hasMarkerName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string markerName = 2;</code>
       */
      public java.lang.String getMarkerName() {
        java.lang.Object ref = markerName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            markerName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string markerName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMarkerNameBytes() {
        java.lang.Object ref = markerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          markerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string markerName = 2;</code>
       */
      public Builder setMarkerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        markerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string markerName = 2;</code>
       */
      public Builder clearMarkerName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        markerName_ = getDefaultInstance().getMarkerName();
        onChanged();
        return this;
      }
      /**
       * <code>required string markerName = 2;</code>
       */
      public Builder setMarkerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        markerName_ = value;
        onChanged();
        return this;
      }

      private boolean markerEnabledFlag_ ;
      /**
       * <code>required bool markerEnabledFlag = 3;</code>
       */
      public boolean hasMarkerEnabledFlag() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bool markerEnabledFlag = 3;</code>
       */
      public boolean getMarkerEnabledFlag() {
        return markerEnabledFlag_;
      }
      /**
       * <code>required bool markerEnabledFlag = 3;</code>
       */
      public Builder setMarkerEnabledFlag(boolean value) {
        bitField0_ |= 0x00000004;
        markerEnabledFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool markerEnabledFlag = 3;</code>
       */
      public Builder clearMarkerEnabledFlag() {
        bitField0_ = (bitField0_ & ~0x00000004);
        markerEnabledFlag_ = false;
        onChanged();
        return this;
      }

      private boolean useImageEBT_ ;
      /**
       * <code>required bool useImageEBT = 4;</code>
       */
      public boolean hasUseImageEBT() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bool useImageEBT = 4;</code>
       */
      public boolean getUseImageEBT() {
        return useImageEBT_;
      }
      /**
       * <code>required bool useImageEBT = 4;</code>
       */
      public Builder setUseImageEBT(boolean value) {
        bitField0_ |= 0x00000008;
        useImageEBT_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool useImageEBT = 4;</code>
       */
      public Builder clearUseImageEBT() {
        bitField0_ = (bitField0_ & ~0x00000008);
        useImageEBT_ = false;
        onChanged();
        return this;
      }

      private float markerTempCAverage_ ;
      /**
       * <code>optional float markerTempC_Average = 5;</code>
       */
      public boolean hasMarkerTempCAverage() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float markerTempC_Average = 5;</code>
       */
      public float getMarkerTempCAverage() {
        return markerTempCAverage_;
      }
      /**
       * <code>optional float markerTempC_Average = 5;</code>
       */
      public Builder setMarkerTempCAverage(float value) {
        bitField0_ |= 0x00000010;
        markerTempCAverage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float markerTempC_Average = 5;</code>
       */
      public Builder clearMarkerTempCAverage() {
        bitField0_ = (bitField0_ & ~0x00000010);
        markerTempCAverage_ = 0F;
        onChanged();
        return this;
      }

      private float markerTempCMin_ ;
      /**
       * <code>optional float markerTempC_Min = 6;</code>
       */
      public boolean hasMarkerTempCMin() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float markerTempC_Min = 6;</code>
       */
      public float getMarkerTempCMin() {
        return markerTempCMin_;
      }
      /**
       * <code>optional float markerTempC_Min = 6;</code>
       */
      public Builder setMarkerTempCMin(float value) {
        bitField0_ |= 0x00000020;
        markerTempCMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float markerTempC_Min = 6;</code>
       */
      public Builder clearMarkerTempCMin() {
        bitField0_ = (bitField0_ & ~0x00000020);
        markerTempCMin_ = 0F;
        onChanged();
        return this;
      }

      private float markerTempCMax_ ;
      /**
       * <code>optional float markerTempC_Max = 7;</code>
       */
      public boolean hasMarkerTempCMax() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float markerTempC_Max = 7;</code>
       */
      public float getMarkerTempCMax() {
        return markerTempCMax_;
      }
      /**
       * <code>optional float markerTempC_Max = 7;</code>
       */
      public Builder setMarkerTempCMax(float value) {
        bitField0_ |= 0x00000040;
        markerTempCMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float markerTempC_Max = 7;</code>
       */
      public Builder clearMarkerTempCMax() {
        bitField0_ = (bitField0_ & ~0x00000040);
        markerTempCMax_ = 0F;
        onChanged();
        return this;
      }

      private float markerEmissivity_ ;
      /**
       * <code>optional float markerEmissivity = 8;</code>
       */
      public boolean hasMarkerEmissivity() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float markerEmissivity = 8;</code>
       */
      public float getMarkerEmissivity() {
        return markerEmissivity_;
      }
      /**
       * <code>optional float markerEmissivity = 8;</code>
       */
      public Builder setMarkerEmissivity(float value) {
        bitField0_ |= 0x00000080;
        markerEmissivity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float markerEmissivity = 8;</code>
       */
      public Builder clearMarkerEmissivity() {
        bitField0_ = (bitField0_ & ~0x00000080);
        markerEmissivity_ = 0F;
        onChanged();
        return this;
      }

      private float markerBackgroundTempC_ ;
      /**
       * <code>optional float markerBackgroundTempC = 9;</code>
       */
      public boolean hasMarkerBackgroundTempC() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float markerBackgroundTempC = 9;</code>
       */
      public float getMarkerBackgroundTempC() {
        return markerBackgroundTempC_;
      }
      /**
       * <code>optional float markerBackgroundTempC = 9;</code>
       */
      public Builder setMarkerBackgroundTempC(float value) {
        bitField0_ |= 0x00000100;
        markerBackgroundTempC_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float markerBackgroundTempC = 9;</code>
       */
      public Builder clearMarkerBackgroundTempC() {
        bitField0_ = (bitField0_ & ~0x00000100);
        markerBackgroundTempC_ = 0F;
        onChanged();
        return this;
      }

      private float markerTransmission_ ;
      /**
       * <code>optional float markerTransmission = 10;</code>
       */
      public boolean hasMarkerTransmission() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float markerTransmission = 10;</code>
       */
      public float getMarkerTransmission() {
        return markerTransmission_;
      }
      /**
       * <code>optional float markerTransmission = 10;</code>
       */
      public Builder setMarkerTransmission(float value) {
        bitField0_ |= 0x00000200;
        markerTransmission_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float markerTransmission = 10;</code>
       */
      public Builder clearMarkerTransmission() {
        bitField0_ = (bitField0_ & ~0x00000200);
        markerTransmission_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object presentationSettingsXML_ = "";
      /**
       * <code>optional string presentationSettingsXML = 11;</code>
       */
      public boolean hasPresentationSettingsXML() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string presentationSettingsXML = 11;</code>
       */
      public java.lang.String getPresentationSettingsXML() {
        java.lang.Object ref = presentationSettingsXML_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            presentationSettingsXML_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string presentationSettingsXML = 11;</code>
       */
      public com.google.protobuf.ByteString
          getPresentationSettingsXMLBytes() {
        java.lang.Object ref = presentationSettingsXML_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          presentationSettingsXML_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string presentationSettingsXML = 11;</code>
       */
      public Builder setPresentationSettingsXML(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        presentationSettingsXML_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string presentationSettingsXML = 11;</code>
       */
      public Builder clearPresentationSettingsXML() {
        bitField0_ = (bitField0_ & ~0x00000400);
        presentationSettingsXML_ = getDefaultInstance().getPresentationSettingsXML();
        onChanged();
        return this;
      }
      /**
       * <code>optional string presentationSettingsXML = 11;</code>
       */
      public Builder setPresentationSettingsXMLBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        presentationSettingsXML_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object annotationsXML_ = "";
      /**
       * <code>optional string annotationsXML = 12;</code>
       */
      public boolean hasAnnotationsXML() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string annotationsXML = 12;</code>
       */
      public java.lang.String getAnnotationsXML() {
        java.lang.Object ref = annotationsXML_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            annotationsXML_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string annotationsXML = 12;</code>
       */
      public com.google.protobuf.ByteString
          getAnnotationsXMLBytes() {
        java.lang.Object ref = annotationsXML_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          annotationsXML_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string annotationsXML = 12;</code>
       */
      public Builder setAnnotationsXML(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        annotationsXML_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string annotationsXML = 12;</code>
       */
      public Builder clearAnnotationsXML() {
        bitField0_ = (bitField0_ & ~0x00000800);
        annotationsXML_ = getDefaultInstance().getAnnotationsXML();
        onChanged();
        return this;
      }
      /**
       * <code>optional string annotationsXML = 12;</code>
       */
      public Builder setAnnotationsXMLBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        annotationsXML_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MARKER_COMMON_CHARACTERISTICS)
    }

    static {
      defaultInstance = new MARKER_COMMON_CHARACTERISTICS(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MARKER_COMMON_CHARACTERISTICS)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MARKER_COMMON_CHARACTERISTICS_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MARKER_COMMON_CHARACTERISTICS_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n#MARKER_COMMON_CHARACTERISTICS.proto\"\330\002" +
      "\n\035MARKER_COMMON_CHARACTERISTICS\022\026\n\016uniqu" +
      "eIDString\030\001 \002(\t\022\022\n\nmarkerName\030\002 \002(\t\022\031\n\021m" +
      "arkerEnabledFlag\030\003 \002(\010\022\023\n\013useImageEBT\030\004 " +
      "\002(\010\022\033\n\023markerTempC_Average\030\005 \001(\002\022\027\n\017mark" +
      "erTempC_Min\030\006 \001(\002\022\027\n\017markerTempC_Max\030\007 \001" +
      "(\002\022\030\n\020markerEmissivity\030\010 \001(\002\022\035\n\025markerBa" +
      "ckgroundTempC\030\t \001(\002\022\032\n\022markerTransmissio" +
      "n\030\n \001(\002\022\037\n\027presentationSettingsXML\030\013 \001(\t" +
      "\022\026\n\016annotationsXML\030\014 \001(\tBK\n,com.aolais.e",
      "lectroraven.is2viewerbeta.protosB\033Marker" +
      "CommonCharacteristics"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_MARKER_COMMON_CHARACTERISTICS_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_MARKER_COMMON_CHARACTERISTICS_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MARKER_COMMON_CHARACTERISTICS_descriptor,
        new java.lang.String[] { "UniqueIDString", "MarkerName", "MarkerEnabledFlag", "UseImageEBT", "MarkerTempCAverage", "MarkerTempCMin", "MarkerTempCMax", "MarkerEmissivity", "MarkerBackgroundTempC", "MarkerTransmission", "PresentationSettingsXML", "AnnotationsXML", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
